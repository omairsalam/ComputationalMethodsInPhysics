(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    224192,       4463]
NotebookOptionsPosition[    223535,       4437]
NotebookOutlinePosition[    223879,       4452]
CellTagsIndexPosition[    223836,       4449]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "FAIR", " ", "DYE", " ", "WITH", " ", "PROBABILITY", " ", "OF", " ", 
     "WINNING"}], " ", "=", " ", 
    RowBox[{"PROBABILITY", " ", "OF", " ", "LOSING"}]}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "VARIABLES", " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"numberOfTrials", " ", "=", " ", "0"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "total", " ", "number", " ", "of", " ", "trials", " ", "of", " ", "the", 
     " ", "same"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"probability", " ", "=", " ", "1"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"initial", " ", "value", " ", "of", " ", "probability"}], " ", 
    "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scorePerThrow", " ", "=", " ", "50"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "this", " ", "defines", " ", "the", " ", "number", " ", "of", " ", 
      "levels", " ", "we", " ", "have"}], "*)"}], " ", "\[IndentingNewLine]", 
    RowBox[{"results", " ", "=", " ", 
     RowBox[{"List", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterator", " ", "=", " ", "0"}], ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "outer", " ", "loop", " ", "for", " ", "total", " ", "number", " ", "of", 
     " ", "games"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"innerIter", " ", "=", " ", "0"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "inner", " ", "loop", " ", "for", " ", "total", " ", "number", " ", "of", 
     " ", "trials", " ", "in", " ", "one", " ", "game"}], " ", "*)"}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "CONSTANTS", " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"origBaseScore", " ", "=", " ", "40000"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lowerScore", " ", "=", " ", "20000"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"upperScore", " ", "=", " ", "80000"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"targetScore", " ", "=", " ", "42000"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"origLowerScore", " ", "=", " ", "lowerScore"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"origUpperScore", " ", "=", " ", "upperScore"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"countInner", " ", "=", " ", "100"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"countOuter", " ", "=", " ", "10000"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runningScore", " ", "=", " ", "origBaseScore"}], ";"}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"While", " ", "[", 
     RowBox[{
      RowBox[{"iterator", " ", "<", " ", "countOuter"}], " ", ",", " ", 
      RowBox[{"(*", 
       RowBox[{"TOTAL", " ", "NUMBER", " ", "OF", " ", "GAMES"}], " ", "*)"}],
       " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", " ", "[", " ", 
        RowBox[{
         RowBox[{"innerIter", " ", "<", " ", "countInner"}], " ", ",", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "TOTAL", " ", "NUMBER", " ", "OF", " ", "TRAILS", " ", "PER", " ", 
           "GAME"}], " ", "*)"}], " ", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
          RowBox[{"myRandom", " ", "=", " ", 
           RowBox[{"RandomInteger", "[", "5", "]"}]}], ";", 
          "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"If", " ", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"myRandom", " ", "\[Equal]", " ", "0"}], "  ", "\[Or]", 
             RowBox[{"myRandom", " ", "\[Equal]", " ", "1"}], " ", "\[Or]", 
             RowBox[{"myRandom", " ", "\[Equal]", " ", "2"}]}], " ", ",", 
            RowBox[{"(*", " ", 
             RowBox[{
             "equal", " ", "probability", " ", "of", " ", "increasing", " ", 
              "or", " ", "decreasing", " ", "score"}], " ", "*)"}], " ", 
            "\[IndentingNewLine]", "\t\t\t\t", 
            RowBox[{"runningScore", " ", "=", " ", 
             RowBox[{"runningScore", " ", "+", " ", "scorePerThrow"}]}], ",", 
            "\[IndentingNewLine]", "\t\t\t\t", 
            RowBox[{"runningScore", "  ", "=", " ", 
             RowBox[{"runningScore", " ", "-", " ", "scorePerThrow"}]}]}], 
           "\[IndentingNewLine]", "\t\t\t   ", "]"}], ";", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "runningScore", " ", "\[GreaterEqual]", "  ", "origUpperScore"}],
              " ", "\[Or]", "  ", 
             RowBox[{
             "runningScore", " ", "\[LessEqual]", "  ", "origLowerScore"}]}], 
            ",", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
              "IF", " ", "WE", " ", "CROSS", " ", "THE", " ", "SCORE", " ", 
               "BOUNDS"}], ",", 
              RowBox[{"STOP", " ", "ITERATIONS", " ", "AND", " ", "RESET"}]}],
              " ", "*)"}], " ", "\[IndentingNewLine]", "\t", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"runningScore", " ", "=", " ", "0"}], ";"}], "*)"}], 
            "\[IndentingNewLine]", "\t", 
            RowBox[{"Break", "[", "]"}]}], "\[IndentingNewLine]", "\t", "]"}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
          RowBox[{"innerIter", "++"}], ";"}]}], "\t", "\[IndentingNewLine]", 
        "\t", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", " ", "[", " ", 
        RowBox[{
         RowBox[{"runningScore", " ", "\[NotEqual]", " ", "0"}], ",", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"results", ",", " ", 
            RowBox[{"(", 
             RowBox[{"runningScore", "-", "origBaseScore"}], ")"}]}], "]"}], 
          ";"}]}], 
        RowBox[{"(*", " ", 
         RowBox[{"we", " ", "save", " ", "the", " ", "net", " ", "score"}], 
         " ", "*)"}], " ", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"runningScore", " ", "=", " ", "origBaseScore"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"innerIter", " ", "=", " ", "0"}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"iterator", "++"}], ";"}]}], " ", "\[IndentingNewLine]", "\t", 
     "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"results", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "CALCULATE", " ", "AXIOMATIC", " ", "PROBABILITY", " ", "USING", " ", 
     "BINOMIAL", " ", "DISTRIBUTION"}], " ", "*)"}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"number", " ", "=", " ", "10000"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"endLocation", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"expectedData", " ", "=", " ", 
     RowBox[{"List", "[", "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"probabilityEquation", " ", "=", " ", 
     RowBox[{
      FractionBox[
       RowBox[{"number", "!"}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{"number", "+", "endLocation"}], ")"}], "2"], ")"}], "!"}],
         "*", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{"number", "-", "endLocation"}], ")"}], "2"], ")"}], 
         "!"}]}]], "*", " ", 
      SuperscriptBox[
       RowBox[{"(", " ", "0.5", ")"}], 
       FractionBox[
        RowBox[{"number", "+", "endLocation"}], "2"]], "*", 
      SuperscriptBox[
       RowBox[{"(", " ", "0.5", ")"}], 
       FractionBox[
        RowBox[{"number", "-", "endLocation"}], "2"]]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterator", " ", "=", " ", "0"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{"1000", ",", "p"}], "]"}], ",", "k"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"{", "0.5", "}"}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "800"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"expectedData", " ", "=", " ", 
     RowBox[{"List", "[", "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterator", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"endLocation", " ", "=", " ", 
     RowBox[{"-", "6000"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"number", " ", "=", " ", "10000"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "finding", " ", "the", " ", "probability", " ", "of", " ", "the", " ", 
     "score", " ", "falling", " ", "in", " ", "these", " ", "regions"}], " ", 
    "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{"While", " ", "[", 
    RowBox[{
     RowBox[{"endLocation", " ", "<", " ", "6000"}], ",", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{"endLocation", " ", "=", " ", 
       RowBox[{"endLocation", " ", "+", 
        RowBox[{"scorePerThrow", "/", "10"}]}]}], ";", "\[IndentingNewLine]", 
      "\t\t\t", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"probabilityValue", " ", "=", " ", 
       RowBox[{
        FractionBox[
         RowBox[{"number", "!"}], 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"(", 
             RowBox[{"number", "+", "endLocation"}], ")"}], "2"], "!"}], "*", 
          RowBox[{
           FractionBox[
            RowBox[{"(", 
             RowBox[{"number", "-", "endLocation"}], ")"}], "2"], "!"}]}]], 
        "*", " ", 
        SuperscriptBox[
         RowBox[{"(", " ", "0.5", ")"}], 
         FractionBox[
          RowBox[{"number", "+", "endLocation"}], "2"]], "*", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", " ", "0.5", ")"}], 
          FractionBox[
           RowBox[{"number", "-", "endLocation"}], "2"]], "/", "10"}]}]}], 
      ";", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"expectedData", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"endLocation", "*", "5"}], ",", "probabilityValue"}], 
         "}"}]}], "]"}], ";", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"iterator", "++"}], ";"}]}], "\[IndentingNewLine]", "\t", "]"}],
    "\[IndentingNewLine]", 
   RowBox[{"expectedData", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", " ", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"expectedData", ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
       RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "14"}], ",", " ", 
          RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", "Black"}], "]"}]}], "}"}]}], ",", " ", 
       RowBox[{"PlotLegends", "\[Rule]", " ", 
        RowBox[{
        "{", "\"\<Expected Probability Density Function\\n Using Binomial \
Distribution\>\"", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataHistogram", " ", "=", " ", 
     RowBox[{"SmoothHistogram", "[", 
      RowBox[{"results", ",", " ", 
       RowBox[{"GridLines", "\[Rule]", " ", 
        RowBox[{"{", " ", 
         RowBox[{"{", 
          RowBox[{"Mean", "[", "results", "]"}], "}"}], "}"}]}], ",", " ", 
       RowBox[{"GridLinesStyle", "\[Rule]", " ", "Dashed"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Net Money Made $\>\"", ",", "\"\<Probability\>\"", ","}], 
         RowBox[{"(*", 
          RowBox[{
          "\"\<Conditions= \nStarting Money = $40000; \nMoney gained per each \
correct throw = $50;\nFAIR dye i.e. P(WIN) = 3/6, P(LOSS) = 3/6\n\>\"", ",", 
           "\"\<\>\""}], "*)"}], "}"}]}], ",", " ", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"Inset", "[", 
         RowBox[{
          RowBox[{"Framed", "[", 
           RowBox[{
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<Average Money Made($) = \>\"", "+", 
                  RowBox[{"Mean", "[", "results", "]"}]}], " ", "//", "N"}], 
                "}"}], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"{", "Left", "}"}], "}"}]}]}], "]"}], ",", 
            RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1700", ",", "0.0008"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], " ", ",", "  ", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<Probabiliy Density  Function\\n For 1000,000 Trials\>\"", 
         "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "14"}], ",", " ", 
          RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", "Black"}], "]"}]}], "}"}]}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
          RowBox[{"PointSize", "[", "0.005`", "]"}]}], "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"p2", ";"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dataHistogram", ",", "p2"}], "}"}], " ", ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1700"}], ",", "1700"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.00082"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"END", "  ", "DYE"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.638145936497384*^9, 3.6381459736707177`*^9}, {
   3.6381460345998745`*^9, 3.6381460957411995`*^9}, {3.6381461327444277`*^9, 
   3.638146133697109*^9}, {3.6381461638634644`*^9, 3.6381461823405557`*^9}, 
   3.6381472893899517`*^9, {3.6384841851156235`*^9, 3.6384842563890877`*^9}, 
   3.6384842973961334`*^9, {3.638484374718859*^9, 3.6384843753573127`*^9}, {
   3.638484424329013*^9, 3.638484459306759*^9}, {3.638484490045545*^9, 
   3.6384845182494955`*^9}, {3.6384846386107397`*^9, 
   3.6384850253366036`*^9}, {3.638485825369093*^9, 3.6384858286954784`*^9}, {
   3.6384876841963825`*^9, 3.638487693185749*^9}, {3.638487732804801*^9, 
   3.6384877521404905`*^9}, {3.6384877882280445`*^9, 
   3.6384877892597747`*^9}, {3.6384878849465327`*^9, 3.638487949652357*^9}, {
   3.638487995469784*^9, 3.638487996913827*^9}, {3.638488171569496*^9, 
   3.6384881733017116`*^9}, {3.638524530994604*^9, 3.6385245438767138`*^9}, {
   3.638524616767358*^9, 3.6385246350563087`*^9}, {3.6385262275920153`*^9, 
   3.638526237192813*^9}, {3.638526270692505*^9, 3.6385262726669025`*^9}, 
   3.6385263476730237`*^9, {3.6385788699145403`*^9, 3.638578874685939*^9}, {
   3.6385789600874033`*^9, 3.638579002268277*^9}, {3.638583552364295*^9, 
   3.638583554953118*^9}, {3.638698445618348*^9, 3.6386984504307585`*^9}, {
   3.63889606927472*^9, 3.6388961607133923`*^9}, {3.638896215991517*^9, 
   3.6388963374854455`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          PointSize[0.005]], 
         LineBox[CompressedData["
1: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
UNkY7IMfXbiVh3arwYXC2x1Csj44zo857ZmkGvQILxovWPTGbDzfVrut1OCW
XfrmvkpvfF89lN0wWQ2GnIlhDb/kjc2Cf8+btqlBmpOBkuvM3vjIqe1f/T/U
YAqH+xn7Hi9skrnuXHlYHTLv2F4fC/fC6Uu3WDpPq8OCabMofUUvzLa8HUQX
pA55X58t61jxxJWzXssX69Rh1V2NNulqT/zri0Wz77g6FM9UGKmy9sSmnt9Y
VBg0YJOf2PohDk+cbnUgzFNZAyIr3v3J/R6YumwoZcxBA3ZqcJygiPHADi+L
6RVzNaCeMIOuJ/TADdScRkbPNeAg4y7b2fUb+G7atNn2kgY0Xv8dalZ3A5dN
xlHssGvCidGFwr6rN7CgSoSVBNKEdk8nH6scvoGTFcpG/a5qwoXK90MNg+74
5gVevu4YTeiR0P1TIMEdP3sqdImrWhNuueG9+WrueM+6nEjgK00YYvRQiOGv
G5605lbYmtGENMrVGqH33XDs1hG6FgotmMJTbL1m74Z9Hxb9neDUgsw0GYHX
jrphv3n4tkRaCxb8iMkdGXbFdaYDTaKntSDvu8CHp1NcMUvc2OW2K1qwqsn9
LdZyxS8ihW7G+mpBK6U3I9e2XXAc5dnFZ0la0JX68f4zTi7E84hb4U0t6DNQ
pntyzBkLxPbmoiYtGFOYEHbwlDOu38rnfNujBXPsvJrJmp1wLMujWIdJLVgi
ZbUyI+iEOV9OXeZb14L12zrHe7MdsX9mWs1eOm2IX0ldfkDliLni/T+KcmvD
rozDebmeDrjv5mf9RGltOGxJPRA8fR3znHLtEzmlDWeP/9xje/46fuVd+JzW
Whsu/xpR0euwx595dfoEvbUh2dNOX0kJe7yYtUctOlEbMibU3WMvscNpH0bN
Bcq1IbtRztw2gx1uCGPXoWvRhoI8YUe/Bl7DToHveqUHtKHcDweT7gVb/Lld
MPz2nDZETYap98xs8YvZysO25DrwbDh8lf36KrYaZgl34tCBVmeEyIPkr2Ie
rr8PmiR0oCvHAXmbKhvsVCtNrqSrA0Omt1x12WxIz6sp8OtlUn13pko86gq2
8pA2yPPXgSl+/ROsvy7jwTe3C+UydGCJRjP7vyuXsVnlvgOZd3RgPWP52S8D
1jj2ZmJbQKcOxKOJMa9UrLHhgvL2w1Ed2E/6bd2tt8KdHxjVKFZItZv1RuYR
K/wtLvg0N7UuxL5ZVhuclvjV/XvP+w7qwol91/s7Ny/hnXDKmX4RXUhWqYxS
h83xOy+epQUlXcitxFR/qdEMHzou8mBJVxeigekjxzNM8S2mi3caLpJqu6bk
dTcTbNkofILHShdabcfvdOgb4wTGZm2Ra7owJMPSJVnUCBetvDQZctCFJcel
PpvRXcRxTDxTos6k9WAqfcG5C9gxY670PKmeuDjStvbiPH52SVzP2ZFUL9Se
eFp+Dv9kfGPXYEdaX3hoUWKYAR7T/P3R4gppfRyGDKZWZ3Fv5FvDGnPS+SwM
tvQCzuDitIAXHy+Qjh+3MfpVVg9Hm18dFNQj7f+ouCVoVQfPuV7we6dKqr9o
5rPd1cIPXPSo98mTPs++Rb/66xqYjSnt9h4x0vEUM011+NXwayfm9Dle0vGu
KSlMTSIcE3SqpYf0/yMTfCm1rqCMKUu8ZV4xkrYPYVkVuC+HYybnGRapSPXw
lfsmQiexBf+rBY1/OpDsss0XVhUxvGIr+WholVQfIL/sJ8aPqxfddAvnSXWM
4tMWxYNYa9LZp3iSVA/OBeyWIMN8y93dn4ZJtd3NGEcWSnTu3T9Ws35SfYFd
a0mUEw1JyzFxdpFq3yXeDEEBZN8e7C+ASbWN0Hn2w+KoRr2rO7KJ9H2jG02f
qTiJ9Pnvngf3SO8/SBhsOCGPDiVckrOoJr1vCljCHykjB7s09oWbOhCRb1QL
cqugYwsFJt8LSdsPne1OtlFDIRQMa2Y5pO9f1e3v61Ua6LjU1m/ZdNL+ART0
Fj+0ECPv42T3JNL+Z81EnkvoolfZs86/Y0n78zboiXjpobwTyh3VkaR6g94p
vfkM8rTuvG0fqgMnvt7XDAw+iypCLinRBZKOr//5fX2pAZKaK6G+7EP6PTym
uzb97BySPErzS/kG6XzH5H6zzZxHSnEFmS5OpN9fok30KRpDdFdgMb3LllT/
TmELPn4RfSdnLjhkSVqP9ZNb9/WM0HXry30aF3Ugd/ec7IyzMbrbW5h3XI+0
HmnWLo5UE0Q3yR7ViEjrKVI1Pv3AFN1Yfjf0WYq0HhqX2ZAhM2QkwJVfyUda
j3u+T8Nvc3TM8+lRZlZSPfaSZpbDAoWVXuiT3U1an+ZaziElSwSOLZCJrmpD
ceOUDAExK3Q2YjVl34Q25E6sNFfBVuh16MWcrW7S9amjldfMwBqJFkbG739E
un79HljwmLJGbjGreU6lpFpkriHpxmXEJ6fTyxdPut5Z7QRUUV5BPO89Qk97
aMOJTBaNjswr6POc741lc23Y/1p47xi/DfL/23LhgAbp+rqjMvTrkQ0a4jry
74GINqw/aVy4T+cq8jetPfH6AKm2d74qNHIVBbubjWhvkq7XRRGiag62qLfK
Lp17gnR/eZf3y3zLFon+nq1Az7VgCM29J16J19Ai5eZq5m3S/UH5ZWQKlx26
FNYiy5xIun+4fzpdfdcO7dYkPTC5kOpbqyydyB61bF557mSgBc+O7Rn/9NYe
HTiT7K4rqQURE3fl78vXkbn2cesL+7WguKaMM9PadSQwz7iv+Kcm5PbXkxGO
dEB1evzzqv2akLH+8rY6qyPykSjtulJHqr/6vLC45YiqQ++08CdoQrKDyUk+
ck4o+YBv2D17Tbh8puJi2isnRD47FSaiRbo/h7dw3TF1Rr1C/RttvJqwv+nt
zPPvzsjSd+pEIoUmxD++1X0OcEEB1mf+NE5oQCum4JYtKlc0tro38WK7BhwW
jiuO1XdFNOTZz4OLNOBZzcxw1hxXdPn30iQM0oBdViXXbk64ou8/pJoKLUj9
hX/NKXEhN9SVzWGYB0n9R2aj2BM3N3SkbyZA8qgGlKt/ekC32Q3Z/Yhut9yl
Aetf9/x+T+GOnCuGD7POqEPBrx9Gr5xyR6nR+jf0XqnDkp2p9uV0d8TtW/1s
4446ZD+4eDNwzB1lJosG709Vhykn/0TT8t1AflpOiume6pBRn9Ix2+kGcq0L
ZvA2VYcx9vvO8jbeQEviplGtUB2SRRw8eW/7BipvHQy6zKcOfYr42IGWBxIT
tA11olOHy03iW6+TPdDmV7PMiZ9q0O6d4oTRsAcaaDHibxlWg7M/NDunuT2R
jc3L8K12NWhFc67Kzd4TXV8Zaiy5pQaHeS4lbN/zROIXamKLSf3fWWU71/hN
TyQ/z/T+u7ca7DK6cYFdzQttLPmJ3SD1i8g9SK4i3gsN+JD/OqyjBnFCLKfk
oBcScil780ZCDcrdyiBr5/RGaeLMOXYH1WD90+LpU1e9kerQieznFGpQcKy6
a7jWG/HOPjd5Nq8KS9Yf3rm67o0o6NrvwwFVyM70NGUF+CCPOwa/2R6rwhTh
Ho/gaB9UoPYlX7xYFTJqfjCm7/dBZOTZ990jVGGM1ZRSLrsvqh5UYuuzU4Vk
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
QchnsdOODaTz/+/1/+v/A7V03Y4=
          "]]}}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxdnHlczXn0/6+xy1YMWVqQEEZCsh8pRhjZQ0IYydhmbENxI2QPFRLTqkKL
9lXnttxude/t3srOyJYsMYSxDL5979v397vnzD/zeD5e8xyV6n7u+33Oq4f7
upkrfpBIJEtaSiT/++///Qcd76JE7x/pOMowgrJkCGUcwHxL5pszvyvzOzC/
DfObM78R8z/dof5byvCSsqSWMt5n/m3mX2V+OfMVzM9nfg7z05ifwPxY5kcw
/yzzg5jvz/wDzPdlvjfztzB/A/NXM385892Y78L8mcyfwnxH5o9j/gjm2zB/
APMtmW/O/C7M78D8NsxvznwJ8z/dpv5bypKXlPEJZel95t9m/lXmq5mvYH4+
83OYn8r8BObHMj+C+SHMD2K+P/MPMH83872Zv4X5G5jvyfzlzHdjvgvzZzB/
CvMdmT+O+XbMt2H+AOZbMt+M+V2Y34H5bZjfjPkS5n+6Rf23lLGOsvQJZbjP
/NvMr2K+mvkK5uczP5v5qcxPYH4s88OZH8L8IOb7M38/83cz35v5W5i/nvme
zF/OfDfmz2P+DOZPYb4j88cy3475NswfwPzezDdjfhfmd2B+a+Y3Y76E+Z9u
Ur+esrSOMjyhLLnP/FvMr2K+mvkK5suYn838VOYnMD+G+eHMD2F+EPOPMn8/
83cz35v5m5m/nvmezF/O/EXMn8f8GcyfwnwH5o9lvh3zbZjfn/m9mW/G/C7M
N2J+a+Y3Y76E+R9vUL+eMtRRljyhjNXMv8X8KuarmV/MfBnzs5mfyvx45scw
P5z5IcwPZP5R5u9n/m7mezF/M/PXM9+T+cuYv4j585g/g/lOzHdg/ljm2zF/
MPP7M783882Yb8x8I+a3Zn4z5n+7Tv2PlKGesqSOMtYwv5r5t5hfxXwV84uZ
L2N+NvNTmB/P/BjmhzP/DPMDmX+U+fuZv4v5XszfzPz1zF/F/GXMX8T8ecx3
Zr4T8x2YP5b5w5k/mPn9md+b+abMN2a+EfNbM78p879do/5HypJ6yviCsrSG
+dXMv8X8SuarmF/MfBnzs5ifwvx45scwP4z5Z5gfyPyjzPdj/i7mezF/M/PX
MX8V85cxfxHz5zLfmflOzHdg/hjmD2f+YOb3Z74F802Zb8x8I+YbML8p879d
pf5HyviGsvQFZahhfjXzbzK/kvkq5hczH5mfxfwU5sczP5r5Ycw/w/xA5h9h
vh/zdzHfi/mbmL+O+auYv4z5rsyfy3xn5jsxfwLzxzB/OPMHM9+K+RbMN2W+
MfMNmW/A/KbM/1ZF/Q+UpW8owwvKkhrm32P+TeZXMl/FfDnzkflZzE9hfhzz
o5kfxvwzzA9g/hHm+zF/F/O3M38T89cxfxXz3Znvyvy5zHdm/mTmT2D+GOYP
Z741862Yb8F8U+Z3Zr4h8w2Y35T5Xyup/4EyvKEseUEZHzP/HvNvMr+S+Urm
y5mPzM9ifjLz45gfzfww5gczP4D5R5jvx3wf5m9n/ibmr2O+B/Pdme/K/LnM
n878ycyfwPwxzLdlvjXzrZhvwXwT5ndmviHzDZjfhPlfK6j/gbLkDWV8Tln6
mPn3mH+T+RXMVzJfznxkfibzk5kfx/xo5ocyP5j5Acw/wvx9zPdh/nbmb2L+
WuZ7MN+d+a7Mn8P86cyfzPwJzB/NfFvmWzPfivm9mG/C/M7MN6zA3oE/N+27
/Ufht6rAIM0/vicu2wu/SQVOb1m477DdeuF/1WKquqtXimGI8D9ocdKL/Zkj
hiuE/1qL9pMrYrOr3gr/uRZVk3+LMPm7RyOd/1iLF1r1f2Xj/4uOJfe0eGzb
I4m0/TYd4w0tnjEpXVnX77yOpRVajLSI9XhcWiF8pRbvb1k/pVj+TfhyLcaq
e+QUl1jprmAxT4t/ncp2C/Gdq2Npphb7t7bsXnBvl44hWYulP46atfFQgriy
jdOiiUvN3XCnW8I/r8WZtzOn/HujaWOdH6pFpxeDPo/raqNjCNbiZrPZ0clP
F+lYEqDFyWbhfkmRfjrGw1rcNsD//tqxKcLfp8W8oin2LQKrhe+jxfcJM1b+
0cmgic7frsXVwclzo9rZ6hg3avFB69oHm54t1bF0rRZrxmwOa9rksI7BQ4sb
T6y5d3VNuvDdtZi2M/261d0Hwl+oxX981yy0cWrbVOfP0aLn72kvL46z0zFM
12L6oSEVKxYu07FkcsPHXzN4xRPNER2jvRZPBlf5n9iUIfzRWrybbNI4f+FD
4dtqccpQ0xl9jrRtpvOttWjtkPox3MBOx9hPi0c/T3nr9re7jqW9tGi+uvSW
/b7DOgYTLf4stfcyapUu/M5afDXyP7z+4r7w22vxYm3oL5Yag+Y6v5UWF+cc
ajzId5iOoYkWb20916r16SU6lnzV4Av3jR63/fbrGP/VoJf0w4v3gcnCf63B
Ab0XbH7w7q7wn2vw1z92LYu/2ayFzn+swcfylI6lSwbrGP/WYNWTNdMDFy7Q
sfSGBu9f8JEFv9ytY6ho8A8fqlnXLl74Sg2Ois85vCn4mvCLNHgnsXRY+htJ
S52fp8G10xaH/zuvn44hU4PZr2t62D2eqWNJsga1de/mHzb20jFe0qD/4e4D
xldFCv+8Bi0OprlVl6mFH6rBuxYXTpQlvxd+sAarv7ReYJto3krnn9CgR8bu
L3Zbftax9LAGr3f+bNHtwQYdwz4Njmje4fkdw2AdS3w0iHMUaaVv8oW/TYOn
PvQffHzLc+Fv1OC0H/+72+xWBwOdv1aDjf52/Tjz7GgdSzwa8n9+zfL3X65j
XKrBMZeafVX8eVjH0oUavPBEOXJ/+1Thz9Hg4da3s8ua/i386RrcPfnpWtmc
pq11/s8aHOJrPK1g9E86ltprEDIWJ75dNEfHMFqD9YdsvGu779CxxFaDyrgx
I2v7Rgl/UAMPKRy2KFol/H4aXNN9XsmajLfC76XB2Th/Q7fq7m10vokGE2Z3
Mp3c3kHH2EmDFyslXXJUq3Usba/Bzq+c/vw07ISOoZUGgzpcdOj6Z5bwm2hw
R883w3+3fiD++8/laJjU5N+bL1q01eWvyvFi3OpZyc0H61j6oBy7PTdzvT10
nsivlaPxkgOjr/vtFHlJOQ6xM4uKXBQl8txyDHjxa0uje0qRJ5Zj2FpLmfKP
epFHluOG881kUb26ttPlJ8tx7Lsbm9fvHq9jycFy/PRko0O3lStFvqMctd1W
F/0x6KjIfy/Hc7YHAhdmpIh8RTmaOFiGSzbdFvn8ctxe4WM7yuKH9rp8ajmO
NO/SpUVtHx1LoByTHq6NcPWcLvIh5fj24KJTRwI3irxPOfYdtchlSk2wyLuW
Y8W9MfOa7ZOJvG055q7Ze69ncY3IG5Xjs0Aj1TXfNoa6/J0ac1LrGrfsMETH
0lo1tjseOt4o0EXkd9S4tktOB/nJnSIvV6O9zbcOuWMjRV6gxid2d395cq9E
5GlqLPu9w6CB3v+I/IIa/92hfNf1XUcjXX5WjX1WFUj6+I/UseSYGsPj/3A7
WbJE5L5qzGz0cN+XvntEvlWN8YpfPYxOXxD5ajXOHLHU9OxFjcgXqzFm3BKH
5GtvRT5TjTBx+L0Bn7p00OUT1Wi95vgB/96gY+kINeau/7hyTZPlIh+oxisP
HJ455vmJ3FyNO56aNT27K17kHRs+X5Ozb7fJKkTeXI02SUtbNPv2XuSfVdhi
VtilzqbdO+rylyoMzW28Z4PFeB1LHqjQc3Dz82NuLBf5VRV2qI9y+XvifpGX
qFC92LhN72PxIs9R4YYfcrNWrq0QeaIKB4YU9jls9V7kESrcVDc/Iz6wq3ig
OKnCTz1TO90oG6dj6QEV/t18uu2K9+4i36HCvc6KNVZH9op8gwonP5vkPE92
QeQrVHjiyAyVx/lykbuo8OrC88+GXnwj8qkqrJv4YNLR9z920uXjVGjllbEv
qHCEjiVDVNhpUOCAHpZuIrdUYebB5SHKIB+Rd1XhUfutPr5bIkXeRoUxls1b
GWGxyBup0C5B/Vdvr+cif6vEVpm/H3HMaNdZl9cq0Tz2vuQx2OhYeluJCmuD
i571s0VersTlCacsLT5vEXm+Ej1bHb13Y/EZkacpcelEy+SQfnkij1Viizmb
XJcm3hf5WSXKf3gVVdOsibEu91fiFav3IXEhljqW+Cpxmn1U05abJ4t8ixJd
Xg9PtD/5m8hXKzH/QOu7E3/wF7mbEjf88yX9c/Vlkc9U4qGQtRsvPq0UuaMS
zz0LzjUxfS/yEUpcGZDarW6ncRddPkCJx4JG/eLdfpSOJeZKTJmocH+tWSTy
Dko0DnO41n6pVOTNlbht15oHP78JE/mnMlzrU7hkSEiByF+W4cLTUBvv9ljk
98sQ38enLh3RvKsuv1qGNx1WX0zt30/HUkUZrjqwUls1dIrIc8rQzzJi3flZ
a0SeUIavHF3uKPceFXlEGY5+fLXVzJpEkQeVoVbmcC7UsELkB8rQ1qHYZ4RD
vci9y3C3NNf/vlfHbrp8QxnaGMxaNTprmI6ly8twftxQO/WnuSJ3KcO/1kL7
r6O3inxKGb5fuUdpvPO0yMeVYeJt862z87JEblOGTR0ThlZ9vi1yyzK8nz4k
8JLNF5F3KcNki1NLapeadtflbcqwcr7zpcP7xulYKinD8V2jzmmdl4j8bSmu
Xxfaptt1qciflKJnysrQhDlhIr9dipdXRsdElslEri5F66kupt3sHog8vxRd
5gS62gf/YKLLU0sxw9sld8HrnjqWxJbiyIkbW2SMniDykFKMl2RdKNi+TOT+
pfjkW+eLX+N2i3x3KVb0Oz67cWWEyLeUYvRsx8N7nxWI3LMUFz7sWeXy9qHI
3Upx8KbU6l//aWyqy2eUouW0b/cz/+6lY4ljKQb/NXvhlrwJIrcrxVVfn/9V
fXyZyAeU4uNRSa9mzN8tcrNSfPdj0ojxHSJE3qEUDZu3ODBali/yZqV4WH7X
qnbZA5F/KsH5q8f6/Pe5kZkurytBb/uUhAkHeuhYcr8E147c2/Jku/EiryrB
S2/bud85tETkihIcdsLIoXFjqcizS9D/2YcRTWrOiTyhBFelt9Ccz84VeXgJ
9hzVp+Sx3x2RB5XgTqO8otTpn0W+vwS3N969tLFRV3Nd7l2CLidyF8dr7XQs
XV+ClsOMR+7xnyfy5SV4esZAs/HOm0U+rwRvf9y/epdRoMinlGCnWV8jVTeS
RT62BL/sd/7iF1khcpsSrPn9vNunza9F3rsEF2fPaTRxRvseurxLCX59+lf7
2x4/6VjaugRb9rMd+5f9VJFLSlCu9LVwHuwp8noFZvv/nWRu6yfyJwrsP77S
sNHM8yK/pcCICfZjw/YUilytwPYbezts1D4QuUyBp93yviUPa9RTl6cqcPDO
Z0Gly810LI1R4BXHE40yj4wWeYgCh9narvStnS/yowp02X7DzHrDFpHvVqBq
4H/7tvcJFPlmBXYuTS183jJZ5J4KtCtuPOtqJ63IFymwzxt/39JTL0U+Q4FD
1737b9YMg1663KHh83t+1XL4rL46ltgp8NB/G+MnBjuKvL8Cx2zwvuvYc5nI
zRRo8Md1x3c1UpEbKXDgrsqWoxVnRd5MgffNLEYO758l8o/FqJi8vVLx8prI
64ox6tTJ9T0M3oq8uhidMnf2k201tNDlVcX4T8XXjY2W/qRjaXExdlKrSqzn
OYk8uxhzHLZsnFz8q8jji3HPokYGs6J2izy8wfcMaGdZEyrywGJMXrT0/bWv
OSLfX4zm5YF7h5TfELlXMdq9niW91/+dyNcXY+zAjNjbTYx66/JlDdz4iMr2
5E86lswrxpVRe+wfPZ4scqdiNLKaMv3r3RUiH1uMhq4RPw723CXywQ1/Xkaj
4qsvz4m8dzHW+U7rt/RppsiNi7HZdpvsR1FXRd66GFf4zu5Z0PKNyL/JsYvJ
GRezz20sdXm9HKdfWxspvdlXx9IaOR7K7ptTfMBB5LfkWHVmQO/MV0tErpJj
O6/CiTtubRe5TI4XFyzyfnQ9SOQpcty12qztvIQkkcfI8etv00p8vNQiPyPH
uYbNfzJX14r8qBy3HFwzwaJHkz66fJccWyQ+7JXvZK5jyWY53jsY6rRr2kiR
r5KjTXz8Z8uBc0S+SI5HjLynGDXaIHJnOW4Y/CVw7eiDIneQo/G+byb2siiR
D5fjqlUBt3G2TOT95Vg5aNKGPw/cFrmpHP872D51VOU7kRvJ0SRIdb8JGPbV
5U3l+OOPW8ocbfrrWPKxCPGY1ZsnSx1F/qKBPY5O+bVwiciri9A3Kdqix8ht
Iq8swjeay1MmbwoQeXER/lTRaGH3qwkizyrC6//93cwxWSHy+CJc1PPgv6Em
D0UeVoSyd4e6Htr1ReSBRRjlcnjQ3fRO/XS5XxF6PzUNDtowWMcSryKs/tfj
0bl0J5GvK0I/LP63p8dykS8rwmDFA4vdnXeKfG4RzpoUtu/iXydF7lSEDoY/
+HyruSzyMUW4cllh1eN2ZSIfXIR/fHKa4f/rI5FbFGHSmG7vl8Z9FblxEU4y
y062b9TZSpcbFOG7JuOXKocO1rHkWyFGSu/elF+cLPI3hZjR5svfJ7osE3lN
IV6vHZ741MVL5DcL8dmSZytMPweIXNXAE9JTX3+MFzkW4pqHRy1OqeUiTynE
pXd+OXk4r1rk0YW4J3QeRPp9EPmZQjR5/G5l5xeG/XX5kUK8Vel7X21ipWPJ
rkL8KSqoIPCTvcg3FWLXS12CWu5eKPJVhbhs85SPXg//ELlrIQ5zLdJYxR8S
uXMh2g7vNr9daKTIJxTi6UfBRz2CckU+vBCrmmUbJlpdFblVIe4wn2kqH/pS
5KaFuPfr2+FWO5sO0OWGhQ3vf457rfE11bGkaSGOGxRk+CR4mMg/FGBdj7YD
Xu76ReQvCtDmuaSinfcKkd8rwPvnrd66Wu8QeWUBPn1e637KMlDk8gJ8KRu4
YObROJFnFWCuxbctNsGFIo8rwFnvTr8pjrwj8rACHJz38H6/O/UiDyhA9251
hte3GAzU5X4F2HJ0/+QBb3rqWLq9ABO6jfdbZDhS5OsK8PU/d/s3fjhD5O4F
GLvEouzIdg+Rzy3AO85xK0anSUU+uQBLQ+d0+lMWJPIxDR9Pem7ohSfxIrcu
wOimVfv3viwUuUUB/rnw7qy8SXdE3rkA83f6mf7Qtl7kBgVo/0iy3zWk5U+6
/Gs+OvXylUZb9dCx5E0+Kvc6ze/01lbkj/Nxt8Wz3vtCfhH5zXwcmeDo+X7h
cpEr8/HR/F+3V/6wXeSYj39vKF/S894xkSfn49ZReeelQdEij87HvFknp01q
kyfy4Hyc3baXSYl7lciP5COEWDUKTXomcp98bL7i9seSdY0G6fJN+TjPPfdw
aHonHUs98rHHh4zx4/YMFLlrPmoXplT69Jgg8un5+MZryaiJ2S4in9Dw/1tw
oPGZh+tEbpuP1tNefN7p4ytyq3ycYee3TjEtWOQm+bhyUJumKZWJIjfMx67v
xpv3/bNI5E3yccjs3TOfzr4t8g8y/PHVnDiP+a9F/lyGr/KGTaz/t6m1Lr8n
w+mty8zqr3TTsbRChvlD7Abc/XOwyOUy7Fx18an9O0eRZ8rQeKf8W6LvQpHH
yfDaD2j50GaDyENleCk/ofv8DXtEHiDDASv+WTH2QrDI98nw4YL3oz33J4p8
uwz/flvy4JdNhSJfK8PffO/6Hxp7U+TuMvy5RfCeu4avRD5Hhp413yJaGTUe
rMsny7CVZtR/l+d31rF0tAzjd2RkLPEdIHJrGQ7v9aZgidt4kfeSYZ99+y9P
6jpH5J1l2KFz7B/Fx1eJvJUMP1srhzs/3SHyr4hdxv9aMzL8uMhfI07wOGA+
2eO8yB8jrt7YN2pkdZbIbyBaWxi08OugEbkSMeSHxz8//OmhyPMQm6hvnKiu
ei/yZMRvN0+OP9PVwEaXn0dc2vrsxVoDcx1LghENUzeUH6m3EflhxLrZG3t3
mTVR5D6I/dysw1qOWiDyjYgjBq3bF527VuQeDR9ft0u/HP7XR+QLEW9X+Q/O
fxMg8umIn5fmTz3oGiNy+4aXU+U/ph3sc0Rui/jn1NI9aheNyPshdny7/V+H
uw9EboIod5yadyntncjbI94vb/ahsq7FEF3eBHHmke4JHQ51F/wqD++ds+kS
Nc1a8LU87KKcs/DpcXvBuXnY6vBngzHd5giOzMOjC26MtnuxUvDBPDz909uS
MwbbBf+eh0femedP3HlE8Pw8HFlv0ijQMkww5OGv772+hIxJFtwnDwsOrnZO
2FckuG0e5iVPLU5sfkPwuys4MW2q7Rp8JvjOFQx3L75zKOWL4IIrOCDYZp/D
H+2H6vhCw3/v42LiPKCn4GNXcMr1XzOXNxsqeOsVbDfeo2TWDxMFL76CqpGf
ul8xdxE88Qo6Tuq6tI27p+CBV3Bgt4Vpa+Regjtewd9iftlRPO2o4M+5KBvi
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
CqSf5HYpkP6SJ6VA+k3elgLpP5GUAelHaVMGpD+lSxmQfhXLMiD9KzZlQPpZ
xpUB6W+ZUgak38WlDEj/y/IyIP0wG8qA9Md4lwHplzlQBqR/JqgMSD9NRBmQ
/pqEMiD9NjllQPpvFGVA+nGulgHpz7lfBqRf52UZkP6dT2VA+nmaK4H093RQ
Aun3MVcC6f8ZoATSDzRCCaQ/yFEJpF9ophJI/5CbEkg/0WolkP6iLUog/Ua+
SiD9R/5KIP1IZ5VA+pNilUD6ldKUQPqX8pVA+pnKlUD6m24rgfQ71SqB9D+9
VQLph2qkAtIf1UYFpF+qqwpI/5SlCkg/1RAVkP6qcSog/VZTVUD6r1xUQPqx
VqiA9GdtUAHp19qhAtK/dUAFpJ/rpApIf1eECki/V6IKSP9XjgpIP1iJCkh/
2FUVkH6xByog/WMvVUD6yT6rgPSXNVcD6TfrqAbSf2auBtKPNlANpD9thBpI
v9pENZD+tZlqIP1si9VA+ttWq4H0u21VA+l/81UD6Yc7pgbSH3dWDaRf7oIa
SP9cmhpIP12BGkh/XXnD56vfb3dHDaT/rlYNpB/vnRpIf16jciD9em3LgfTv
dS0H0s/XpxxIf9+QciD9flAOpP9vajmQfsD55UD6A1eUA+kX/L0cSP/gjnIg
/YQHy4H0F54sB9JvGFkOpP8wsRxIP2JuOZD+xJJyIP2K18qB9C8+KAfSz/iq
HEh/4+dyIP2OTTSg3/8IrTSg3w8pba8B/f5I7KQB/X5JiYkG9PsnoZcG9Psp
pf00oN9fiYM0oN9vKbFtYL3+SxitAf1+TKm9BvT7M/FnDej3a0qma0C/fxPm
aEC/n1O6UAP6/Z24VAP6/Z4SDw3o93/CWg3o94NKNzbkev2huE0D+v2iEh8N
6PePwj4N6PeTSg9rQL+/FE9oQL/fVBKsAf3+UwjVgH4/qvS8BvT7U/GSBvT7
VSXJGtDvX4VMDej3s0rzNKDf34pFGtDvd5UoNaDf/woVGtDvh5Xe0IB+fyz+
rQH9flnJYw3o98/C8wZfr59W+loD+v21+K8G9PttJV81oN9/C020oN+PK22l
Bf3+XGyvBf1+XUlnLej374KJFvT7eaW9tKDf34v9tKDf7yux1oJ+/y/YakG/
H1g6Wgv6/cForwX9fmHJZC3o9w/DdC3o9xNL52hBv78YF2pBv99Y4q4F/f5j
8NCCfj+ydK0W9PuTcaMW9PuVJdu1oN+/DD5a0O9nlu7Tgn5/Mx7Wgn6/sySg
4ePX63+GYC3o90NLQ7Wg3x+N57Wg3y8tidOCfv80JGtBv59amqkF/f5qzNOC
fr+1RK4F/f5rUGpBvx9bWqEF/f5svKEF/X5tyT0t6Pdvw2Mt6PdzS59rQb+/
G19rQb/fW/JBC/r93/BVC/r94NImFaDfH46tKkC/X1xiWAH6/ePQuQIkev9I
TShjL8oSK8pgzXxb5o9m/gTmT2b+dObPYb4r892Z78H8tczfxPztzPdh/j7m
H2F+APODmR/K/GjmxzE/mfmZzEfmy5mvZH4F828y/x7zHzP/OfPfMP8D878y
v0kl9Q0ogyFlaWfKaMJ8C+ZbMd+a+bbMH8P8CcyfzPzpzJ/LfFfmuzPfg/nr
mL+J+duZ78N8P+YfYX4A84OZH8b8aObHMT+Z+VnMR+bLma9kfiXzbzL/HvMf
M/8F898w/wPzvzK/aRX1DShLDSljZ8oSU+ZbMN+K+dbMH878McyfwPzJzHdm
/lzmuzLfnfmrmL+O+ZuYv535u5jvx/wjzA9g/hnmhzE/mvlxzE9hfhbzkfly
5quYX8n8m8y/x/wa5r9g/hvmf2D+N+Y3vUp9A8poSFliTBlMmW/BfCvmD2b+
cOaPYf4E5jsx35n5c5nvyvxlzF/F/HXM38R8L+bvYr4f848wP5D5Z5gfxvxo
5sczP4X5WcxH5hczX8X8SubfZH4182uY/4L5b5j/kfnfmN/0GvUNKEuMKIMx
Zakp8y2Y35/5g5k/nPljmO/AfCfmOzN/LvMXMX8Z81cxfx3zNzPfi/m7mO/H
/KPMD2T+GeaHMT+G+fHMT2F+FvNlzC9mvor5lcy/xfxq5tcw/wXz65n/kfnf
mN/0OvVbUwYjylJjymjK/N7M78/8wcwfzvyxzHdgvhPznZk/j/mLmL+M+auY
v575m5nvxfxdzN/P/KPMD2T+GeaHMz+G+fHMT2F+NvNlzC9mvor5Vcy/xfxq
5tcwv4759cz/yPxvzG92g/qtKUuNKKMxZYkZ83szvz/zBzPfjvljme/AfCfm
z2D+POYvYv4y5nsyfz3zNzPfi/m7mb+f+UeZH8j8EOaHMz+G+fHMT2V+NvNl
zC9mvpr5Vcy/xfxq5j9hfh3z65n/kfmSm9RvRlnamjIaUZZ0Yb4Z83szvz/z
bZhvx/yxzHdg/hTmz2D+POYvYv5y5nsyfz3zNzPfm/m7mb+f+UeZH8T8EOaH
Mz+G+QnMT2V+NvNlzFcwX838KubfYv595j9hfh3z65n/ifmSW9RvRhlbU5Z0
oAxdmG/G/N7MH8B8G+bbMX8s8x2ZP4X5M5g/j/luzF/OfE/mr2f+FuZ7M383
8/cz35/5QcwPYX4482OZn8D8VOZnMz+f+Qrmq5lfxfzbzL/P/CfMr2P+W+Z/
Yr7kNvWbUZa0oQwdKEu7MN+M+ZbMH8B8G+bbMX8c8x2ZP4X5M5jvwnw35i9n
vifzNzB/C/O9mb+b+QeY78/8IOaHMD+C+bHMT2B+KvNzmJ/PfAXz1cy/yvzb
zL/P/CfMf8n8t8z/xHzJHeo3pwxtKEs7UMYuzDdnviXzBzDfhvkjmD+O+Y7M
n8L8mcx3Yb4b85czfzXzNzB/C/O9me/L/APM92d+EPPPMj+C+bHMT2B+GvNz
mJ/PfAXzy5l/lfm3mX+f+bXMf8n8t8z/xPxGd6nfnLK0DWXsQFnSlfnmzLdk
/gDmD2H+COaPY74j86f+f/4fw+rCfQ==
          "]]}}}, {}}}, {
    PlotRange -> {{-1700, 1700}, {0, 0.00082}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-1942.7459235567144`, 2138.211526390107}, {
       0, 0.0008066089975044106}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Epilog -> InsetBox[
       BoxData[
        FormBox[
         FrameBox[
          TagBox[
           GridBox[{{
              RowBox[{"\"Average Money Made($) = \"", "+", "3.06`"}]}}, 
            GridBoxAlignment -> {"Columns" -> {Left}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Background -> GrayLevel[1], StripOnInput -> False], 
         TraditionalForm]], {1700, 0.0008}, {Right, Top}], 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"Net Money Made $\"", TraditionalForm], ""}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> NCache[{{
         Rational[153, 50]}, {
         Rational[153, 50]}}, {{3.06}, {3.06}}], GridLinesStyle -> 
     Dashing[{Small, Small}], ImageSize -> Large, 
     LabelStyle -> {FontSize -> 14, 
       Directive[Bold, 
        GrayLevel[0]]}, Method -> {}, 
     PlotRange -> {{-1942.7459235567144`, 2138.211526390107}, {
       0, 0.0008066089975044106}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"Probabiliy Density  Function\\n For 1000,000 Trials\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontSize -> 14, 
             Directive[Bold, 
              GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.005`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"Expected Probability Density Function\\n Using Binomial \
Distribution\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontSize -> 14, 
             Directive[Bold, 
              GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6384847582194223`*^9, {3.6384847924936943`*^9, 3.6384848051396475`*^9}, {
   3.6384848363027287`*^9, 3.6384848597603264`*^9}, 3.6384848898746634`*^9, {
   3.6384849214760284`*^9, 3.6384849467679377`*^9}, 3.638484980047503*^9, {
   3.6384850127526765`*^9, 3.6384850322184477`*^9}, 3.638485835441225*^9, 
   3.6384877000245743`*^9, 3.6384877591174183`*^9, 3.638487796155646*^9, {
   3.638487892320741*^9, 3.638487956364092*^9}, 3.6384880070750012`*^9, 
   3.6384881798683596`*^9, 3.6384882116028447`*^9, 3.6385245533113937`*^9, {
   3.6385246509024997`*^9, 3.638524673142248*^9}, 3.638526253978669*^9, 
   3.6385262936117353`*^9, 3.638526362431467*^9, 3.638578886914576*^9, {
   3.63857897180669*^9, 3.6385790130258784`*^9}, {3.6385835659278774`*^9, 
   3.638583581511913*^9}, 3.638698461914888*^9, 3.6386984986989355`*^9, 
   3.638896072034672*^9, 3.6388961794796767`*^9, 3.638896302448635*^9, 
   3.638896344301236*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6381472715463076`*^9, 3.6381472820187273`*^9}, 
   3.6381477120063944`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "NEXT", " ", "TWO", " ", "PLOTS", " ", "ARE", " ", "THE", " ", "SAME", " ",
     "AS", " ", "THIS", " ", "ONE", " ", "BUT", " ", "THE", " ", "DIES", " ", 
    "ARE", " ", "NOT", " ", "FAIR"}], " ", "*)"}], " "}]], "Input",
 CellChangeTimes->{{3.638484155552693*^9, 3.638484155584716*^9}, {
  3.638896371642576*^9, 3.6388963985536075`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "UNFAIR", " ", "DYE", " ", "WITH", " ", "PROBABILITY", " ", "OF", " ", 
     "WINNING"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "/", "6"}], " ", "and", " ", "PROBABILITY", " ", "OF", " ",
       "LOSING"}], " ", "=", " ", 
     RowBox[{"4", "/", "6"}]}]}], "*)"}], " ", "\n", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"numberOfTrials", " ", "=", " ", "0"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"probability", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scorePerThrow", " ", "=", " ", "50"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "this", " ", "defines", " ", "the", " ", "number", " ", "of", " ", 
     "levels", " ", "we", " ", "have"}], "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", " ", "=", " ", 
     RowBox[{"List", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterator", " ", "=", " ", "0"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"innerIter", " ", "=", " ", "0"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"origBaseScore", " ", "=", " ", "40000"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lowerScore", " ", "=", " ", "20000"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"upperScore", " ", "=", " ", "80000"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"targetScore", " ", "=", " ", "42000"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"origLowerScore", " ", "=", " ", "lowerScore"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"origUpperScore", " ", "=", " ", "upperScore"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"countInner", " ", "=", " ", "100"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"countOuter", " ", "=", " ", "10000"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runningScore", " ", "=", " ", "origBaseScore"}], ";"}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"While", " ", "[", 
     RowBox[{
      RowBox[{"iterator", " ", "<", " ", "countOuter"}], " ", ",", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", " ", "[", " ", 
        RowBox[{
         RowBox[{"innerIter", " ", "<", " ", "countInner"}], " ", ",", 
         "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
          RowBox[{"myRandom", " ", "=", " ", 
           RowBox[{"RandomInteger", "[", "5", "]"}]}], ";", 
          "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"If", " ", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"myRandom", " ", "\[Equal]", " ", "0"}], "  ", "\[Or]", 
             RowBox[{"myRandom", " ", "\[Equal]", " ", "1"}]}], " ", ",", 
            RowBox[{"(*", " ", 
             RowBox[{
             "equal", " ", "probability", " ", "of", " ", "increasing", " ", 
              "or", " ", "decreasing", " ", "score"}], " ", "*)"}], " ", 
            "\[IndentingNewLine]", "\t\t\t\t", 
            RowBox[{"runningScore", " ", "=", " ", 
             RowBox[{"runningScore", " ", "+", " ", "scorePerThrow"}]}], ",", 
            "\[IndentingNewLine]", "\t\t\t\t", 
            RowBox[{"runningScore", "  ", "=", " ", 
             RowBox[{"runningScore", " ", "-", " ", "scorePerThrow"}]}]}], 
           "\[IndentingNewLine]", "\t\t\t   ", "]"}], ";", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "runningScore", " ", "\[GreaterEqual]", "  ", "origUpperScore"}],
              " ", "\[Or]", "  ", 
             RowBox[{
             "runningScore", " ", "\[LessEqual]", "  ", "origLowerScore"}]}], 
            ",", "\[IndentingNewLine]", "\t", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"runningScore", " ", "=", " ", "0"}], ";"}], "*)"}], 
            "\[IndentingNewLine]", "\t", 
            RowBox[{"Break", "[", "]"}]}], "\[IndentingNewLine]", "\t", "]"}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
          RowBox[{"innerIter", "++"}], ";"}]}], "\t", "\[IndentingNewLine]", 
        "\t", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", " ", "[", " ", 
        RowBox[{
         RowBox[{"runningScore", " ", "\[NotEqual]", " ", "0"}], ",", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"results", ",", " ", 
            RowBox[{"(", 
             RowBox[{"runningScore", "-", "origBaseScore"}], ")"}]}], "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"runningScore", " ", "=", " ", "origBaseScore"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"innerIter", " ", "=", " ", "0"}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"iterator", "++"}], ";"}]}], " ", "\[IndentingNewLine]", "\t", 
     "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"results", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"number", " ", "=", " ", "10000"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"endLocation", " ", "=", " ", 
     RowBox[{"-", "3000"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"expectedData", " ", "=", " ", 
     RowBox[{"List", "[", "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"probabilityEquation", " ", "=", " ", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"number", "!"}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"number", "+", "endLocation"}], ")"}], "2"], ")"}], 
          "!"}], "*", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"number", "-", "endLocation"}], ")"}], "2"], ")"}], 
          "!"}]}]], "*", " ", 
       SuperscriptBox[
        RowBox[{"(", " ", 
         FractionBox["2", "6"], ")"}], 
        FractionBox[
         RowBox[{"number", "+", "endLocation"}], "2"]], "*", 
       SuperscriptBox[
        RowBox[{"(", " ", 
         FractionBox["4", "6"], ")"}], 
        FractionBox[
         RowBox[{"number", "-", "endLocation"}], "2"]]}], "//", "N"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterator", " ", "=", " ", "0"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{"1000", ",", "p"}], "]"}], ",", "k"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"{", "0.5", "}"}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "800"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"expectedData", " ", "=", " ", 
     RowBox[{"List", "[", "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterator", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"endLocation", " ", "=", " ", 
     RowBox[{"-", "5000"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"number", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"While", " ", "[", 
    RowBox[{
     RowBox[{"endLocation", " ", "<", " ", "0"}], ",", "\[IndentingNewLine]", 
     "\t\t", 
     RowBox[{
      RowBox[{"endLocation", " ", "=", " ", 
       RowBox[{"endLocation", " ", "+", 
        RowBox[{"scorePerThrow", "/", "10"}]}]}], ";", "\[IndentingNewLine]", 
      "\t\t\t", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"probabilityValue", " ", "=", " ", 
       RowBox[{
        FractionBox[
         RowBox[{"number", "!"}], 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"(", 
             RowBox[{"number", "+", "endLocation"}], ")"}], "2"], "!"}], "*", 
          RowBox[{
           FractionBox[
            RowBox[{"(", 
             RowBox[{"number", "-", "endLocation"}], ")"}], "2"], "!"}]}]], 
        "*", " ", 
        SuperscriptBox[
         RowBox[{"(", " ", 
          FractionBox["2", "6"], ")"}], 
         FractionBox[
          RowBox[{"number", "+", "endLocation"}], "2"]], "*", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", " ", 
           FractionBox["4", "6"], ")"}], 
          FractionBox[
           RowBox[{"number", "-", "endLocation"}], "2"]], "/", "10"}]}]}], 
      ";", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"expectedData", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"endLocation", "*", "5"}], ")"}], "+", "15000"}], ",", 
          "probabilityValue"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\t\t", 
      RowBox[{"iterator", "++"}], ";"}]}], "\[IndentingNewLine]", "\t", "]"}],
    "\[IndentingNewLine]", 
   RowBox[{"expectedData", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", " ", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"expectedData", ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
       RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "14"}], ",", " ", 
          RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", "Black"}], "]"}]}], "}"}]}], ",", " ", 
       RowBox[{"PlotLegends", "\[Rule]", " ", 
        RowBox[{
        "{", "\"\<Expected Probability Density Function \\n Using Binomial \
Distribution\>\"", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataHistogram", " ", "=", " ", 
     RowBox[{"SmoothHistogram", "[", 
      RowBox[{"results", ",", " ", 
       RowBox[{"GridLines", "\[Rule]", " ", 
        RowBox[{"{", " ", 
         RowBox[{"{", 
          RowBox[{"Mean", "[", "results", "]"}], "}"}], "}"}]}], ",", " ", 
       RowBox[{"GridLinesStyle", "\[Rule]", " ", "Dashed"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Net Money Made/ $\>\"", ",", "\"\<Probability\>\""}], 
         RowBox[{"(*", 
          RowBox[{
          ",", "\"\<Conditions= \nStarting Money = $40000;  \nMoney gained \
per each correct throw = $50;\nUNFAIR dye i.e. P(WIN) = 2/6, P(LOSS) = 4/6\n\
\>\"", ",", "\"\<\>\""}], "*)"}], "}"}]}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"Inset", "[", 
         RowBox[{
          RowBox[{"Framed", "[", 
           RowBox[{
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<Average Money Made ($) =\>\"", "+", 
                  RowBox[{"Mean", "[", "results", "]"}]}], " ", "//", "N"}], 
                "}"}], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"{", "Left", "}"}], "}"}]}]}], "]"}], ",", 
            RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.0008"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], " ", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "14"}], ",", " ", 
          RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", "Black"}], "]"}]}], "}"}]}], ",", "  ", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<Probabiliy Density Function \\n For 1000,000 Trials\>\"", 
         "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
          RowBox[{"PointSize", "[", "0.005`", "]"}]}], "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"p2", ";"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dataHistogram", ",", "p2"}], "}"}], " ", ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3500"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.00085"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"END", "  ", "DYE"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}], "*)"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.638146108944551*^9, 3.6381461306949615`*^9}, 
   3.638146184760268*^9, {3.6381476409430556`*^9, 3.6381477167267513`*^9}, {
   3.638373929210582*^9, 3.6383739325213795`*^9}, {3.638374008266452*^9, 
   3.638374017956324*^9}, {3.6384850746194735`*^9, 3.638485121246519*^9}, {
   3.638485164641248*^9, 3.638485215108969*^9}, {3.6384858078526897`*^9, 
   3.638485809596939*^9}, {3.6384876434775457`*^9, 3.6384876788355794`*^9}, {
   3.6384877098715563`*^9, 3.638487710973339*^9}, {3.6384877623417006`*^9, 
   3.6384877704985046`*^9}, 3.6384878653076305`*^9, {3.6384879090175653`*^9, 
   3.6384879092797503`*^9}, {3.6384880313341928`*^9, 
   3.6384880695342517`*^9}, {3.638488099627556*^9, 3.6384881479927883`*^9}, {
   3.638524560135239*^9, 3.638524569465846*^9}, 3.638524649458491*^9, {
   3.6385262531971164`*^9, 3.6385262660732355`*^9}, 3.6385263385165586`*^9, {
   3.638579821736573*^9, 3.6385798402036495`*^9}, {3.638583589835827*^9, 
   3.638583592496708*^9}, {3.6386984570784636`*^9, 3.6386984617437677`*^9}, {
   3.6388963544143915`*^9, 3.6388963556472626`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          PointSize[0.005]], 
         LineBox[CompressedData["
1:eJxdm3c4V3/4/98he8tIZkVmRsg8r7c9Q4hEQrKyCR8RCVnZe75tolJJQtwh
RMlONklCkRkZP7/r+n7/+Z5/zvW4zr3Ofa7Xeb7uP168tu5Gt4hwOJwxMQ73
/+/xi8qO2p8qAPc/1/9lQWFDSsn3FRCUx+XmG1+Btdy2qmJ/WwHat5z63Ikq
McsqF33iVxWwY2WrMppbhW0tB6wuVVXAPWah9++tn2IJolFJg8UV8GGcbWbm
bDUm5JYu9TanApKYMJU7ws+xtqclwyUpFcC6Kffol8oL7PrKS/+42ApI6F79
POf0EtsWa2H3C6sA9wSGzda8GizRo7fxRmAFzGGR+A9TrzDh55NWWj4V0HPj
1RSd8Gvs/Z9lnIRLBaTM/PDKuFeHWUn+KzxpVwEXiTtdjUbeYH+9KNSJLCvA
X5uKj1+mAUt6yfpj0bgCogOR+WFqIyaywRc1oFsBIckMFCObb7F2KSnhRtUK
ILvie7nVuBmzvqPyqVihAq4WfKPbMwVs55Wh+6MLFUAe8rLR9dg7LHnLisFX
uAIcW/7Shpe/w0Qvur60OlMBhLYcvU7dFqzD7+4VzVMVoMOa/PTtYgtmUxe1
LcZUAR5hav+Rhrdiu3/TM9moKqD0XEJoNnsbliJXqnCMuAKKx/Lb4yrbsPMB
NRM/d8uhVr3uJbfse6yzviW4f60cOnWDchvgPWb7r5e3YbEcQqUVffbV27E9
hanWotly4GoZ6KjqbMdSA3/dih0th9uur3kbtTswsbf/yO70H/kzlbZpdHVg
H/YpHl/vKgcjhqnZR7qd2E2MTU+jpRxaGMcsN3s6sb17/L/P15eDzpM+dpzp
ByytWSqB9UU5INOXjHqzHzBxnKok7vFR/oExyrg7XVgX/vLgQkE5FJN8PPeI
oRuzu3/Dty+zHAyaVgy56rqxg3eubPWJ5XC2ndWX+/ZHLIMosL4wqhzGqATe
eol8wiRUoy1j7peDm3Nn7s7+J6z7QcaB93/lcJ1/fiV+pge71VZKsPQsB8+w
F39Iv37GDkleqag7lYPiR0M+eu9eLEO9dU7UphzIg62j1I73YZIRfREs5uWQ
FP45i6q4D/vYPiVwaFgOWvo6fhsG/Zg92e+uH1rl0NFyjbeaYgDDae259OLL
Ab+oTZjoG8CyIinp3sge9T9TiOGwfBCT+sD2vEC8HBIPBT8Fxw9hnyjOGUcL
lAOnwUnOl+HDmIOO9KYXTzmkGDobDcR8wY7FqKZbsJVDXmyf7rHCESy7+7Kc
Gn05aDhacKt1fsWkqK3HRMjL4bOWyU7MwSjWo+cWxIwrBx4fsQfP1MYxx0eB
3AfbZaAWQJvtkTWBEfVEv5tfKQPlL1l/gw4nsRzazJuff5RBhxETa4PcNCZj
UHa8bqoMMnlzkzd3p7He+FdlhC9lQJPARXqhdQZz6m3VjvpcBkkMLLXSSbMY
MUP/kmdHGbger29tdviG5V6efnSt+cj+kqJ2quocdjHpt5jq6zIQ4Wi0ucf3
Hevt3+sTflYGGkFXDrVo5jFnJiqfE2VlcJnZP6Brdx4jMTnJsp9XBlZUWe3T
v35geSnn6r6nlQEL8XdNn/kFTHZI+lpPXBmotiyaxs39xPqZ1fZqI8pgJetP
9+GPRey2qVFe/r0y6E8t/jG1uoQdT7fGR/qWgf8d4Qn5w2Us/4vbrIdbGSg8
ylU5w/Qbk2MLCjO3LwOe135C1SIrWP/VGH4VqzJgun8/cJ9vFXPJzOwUMi2D
m1sLkXF1qxjpaJkzk34Z8FebN7Ho/8EI7LXUe+pl0FQZfTl//g8mb9H2dE6p
DNyjLp05H7qGDWb3G36SLgNU9P5HG8865jY+vfZKtAyUrEYjrFvWMTLOlZQ8
vjI4hfThr/0GVnB9X+YhZxmQiiiwh9BuYgp5VF/dmY/iNftwzNVtYkOTJ+9e
pSmDmZaaYRr7LcyNW4BT+XgZBAy/fTzLvI2RW8s0C+6Xgn7FCQP1zm2skKBm
w7hZCrF7X3dZgv5iijNGxP+WS6GQdLNMVmoHG+a1Kfk2VwoDHNdNY3/tYB62
7pofx0uhxplTfqt8F6MsCvpZM1gK57s63163/4cVfYuJyf1YCr3HVGhq+fYw
pbNZohFtpRDRM12zNr+HfbEr/+zWWAo3mVRW1yr2Mc+SWk+zmlK4w8i71+B2
gFHOtzHhq0pBWuxvqY70IVbMP/BKoLgUxK43KebtH2KYw4wZQ04pcJiNR47d
xKGRspWdneRS2LJItO36gENeC/vZszGlUEV3UzBL/BiiFqQ+WuOl4L76cUYj
4xgqdWKffnm3FE4PXyj5gCNC6LFAaI53KQTxzpxgdSZCXxdlzobfLoW6IL56
rkEi5C2s3u56sxTy8iRqujBiRONi7GhqUQoVqXmXDiuIUWmVDSUyLgXy0sa9
LGYShP/lXnVOtxSsWftqfe+ToFHRe/r0qqWg1bSYYf+LBPm4xa7+lS8Fn1PB
c/LmxxHts6ykGclSoLp3R/td23FUvlIu1SVUCkPjc17tYqRIWfz18IvTpZCx
OtTBmkWKxjze+2ezl4L4AaN+ODEZuvN8gD2MsRTynUuzvt0mQ3RrM40ulKUQ
2KNdTzNAhsolV62uEJVCkqnF4oosOVLxPsBhuyWgFZOQ5ZZLjsZfUhfxr5WA
zw2CdjCOAvlusKvTLZbAXz8lTWFbCkQvLfhje6YEZHBTIWEtFOjxnYtR019L
YOe8IsVjXkqkVqsu/KGvBDiEk5Y6ginRxJbxp+cfSiCWMzuTZYIS+V20dc96
VwJZUS57X+WoEIO/B8ODNyVwfZ7k4EYaFaqsu/fy9vMSmG/j+n24RoXUdmKv
mFSUAHHRuCerITWalMveViwogdW8unKKp9TIP6Aiky+zBEifrYop0dAgxobX
CrSJJRDyqNaS3Y0GVf17P7EVWQJXAy7nUPTRIA3FweCpkBKgSZLGecnQounA
Wd5O/xKYRqqHr/No0X9vV1urPUpg1KbKQ5GSDjEdHNzKdCyBiLvMYPEfHXqC
0ZCHWpeAuWrnFddlOqQZfOqx89USoG9oS5mRoEfTzYJ6xoYlsBCa/mbQnR4F
4GR/K2iVgMTUiNSFanp0Qlkj4Sy+BCqfi+A41+nR0/smkjSyJUBhZm3cIMuA
tFpsBzfFSuCL/prPifsMaJbI03fyXAmEWiglq31kQIGqwWwd3CVQxz1214qd
ETGHPap/xloCOZZc4u63GdGztmzLDLoS2OjGh91rZkTaxx8fhJAdfY81scA4
FiY0q15HcDosBp/YlbwsDyYUGNGuYrRdDDmvVyTSPzEhlo7BOfmVYmhQOZfr
IXoCVZN9izjzoxjOXqLfp0o4gXS0/ghQTxXD6RoBT7XNE2gu8rBrY7gYVOhZ
5pYtmdG9DzSuEz3FwH7vWO7ndmbERslB195eDHZdAU+fSrKg5zpCz582FcM7
/LU3agQWpBsja5xeWwxiGf6kGnSs6Hu3xmbw02JIu9q0aRPMiu5RX0l3LC2G
WdzdRrVVVsR26abc5bxiYMFcHDNt2NCLR55jcmnF8H2ymI16gA3p9QQHnY4r
hrGxCXM9tZNonjaOmyqiGDoZfiTQvTqJQgxy3q0HFQP+8SlLJj52xJ7w+Ob4
nWKgJXUmOZPCjmp6646/dy2GXb/BUU6iU+gSQ0fZk1vFkBqkyvHZ7RT6cXlI
O+36Ub2ZzQHSo6fQ/aRvS/euFMOPOkswUeNA7AN/HjlcKgZdS+NV5SccqIYJ
J26oXgxVDA8NzjBzIn0T2n5ZpWKo0Ty+KRbIiRZSOHx4pYshMPPOz6eznCh0
SIiFUrQYCL+tzDa1uBAHi1zd2tlikKSeLbF/xoVqTTWvjXEUw8RTDi9PFm5k
mH5lr/VEMYQd3mKPvceNfn65mVdFXQwWoeoTUgvc6AGbFz6VpBjefA++sy3I
gzjMQ2aD9opg339XlMeGB9VmxoXZbxTBiRRPvpFMHmQ4msNvsFwEn+Yq420H
edAie2XnxbkicIbZh8cYeFGYxRtnnvEiMLd977ZpwIu4cjqoKQaLoL6IzC4w
kRfVjQ89/dNdBJK3qr/0DfEiI845w9HWIiiwvy56nvM0Wr6+ttbSUARrWwrO
7Q6nUXgeLrXyZRGwVJd+7351GnFP0V5MqSyCWKo4NU+yM6iOm/NrYFER3H3Y
rTdheQYZWQvfvZVdBOvVoz6itWfQMkGOUz+5CHIWSXLCmc6iiBnNZpmYInji
ZrN54HMW8Zw2teF+UASNaXfYqkbPonpbO2Lyu0VwJqcVy1DjQyZFXiWrXkfv
+03yv/YXfOj3txDNr85FULFBviDOx48eno3/+c62CK4afcB3ZPMj3lu5MY+v
FcENeSVxT5ZzqKGkUjTZqAhkOmWBIvUcMpl/8/muThFYftxTsGEVQL/5Oz3t
VIrAV33aUylXAEU6DDNdkj/Kd3qzzZxfEJ0un3slLVkE9HXVyw4vBFHjwpoZ
l1ARNDycoGNQFkKmgsd2SU8XgcDXeNntPiG06kSXs3KyCMYiWk6+thNG0Y85
sRGGIojnlmZf/CuMziwJTwNFEXwQ80wWiBNBb4XlQyuOFcFzk34x6rOiyMxF
62zSTiFE/DYxkKwXRatVpu0BfwpBqorMHDM8j6J/2Tne/FkISze9Jse+n0dn
z3tT6s0Uwn86BhPdAWKoye1+ldTXQhhYPRdsTSaOrj6L1+fsO7IfKbd4byiO
1lZyV49/KIR1h+FXDzLFUax4VdJvKITR89Ij8TPiiN+zXupLXSF8snV2mxOQ
QM3PO4ebqwvh9A8SklB3CWS+NuxfXl4IpbbKWm6vJNC65Hf2REIh6FFcZn+5
K4Fivdcb/8sohD+xnDuWSBLx1xy7YZtQCC5fmeQCH0gi2KA7phtZCD/EYZy7
QxJdk+YquhBSCOOMby3MKC+gjTsi6hz+hVCV79ohfukCiquV/0HiUQi3WzUW
XsdfQALbWlG/HAohae93/GbfBdRy0Ux4+EYh7PInCK4wSSEL/1ufmswKoXmH
J670ihTarPN2LzMoBJ4n3lzs6VIobuc+Q4JmIWyUvOZRH5FCAvIJL/1RIaj1
MVnwnJRGLQF5V2wuFsIx7kszhebSyLKhaltbrBDU3+mQt2ZKo61/9ZmS5wrh
N8eSu99XaZSg+EHhFPdRP0d3JerYZJBQ0JcJYtZCoEjA/4k0k0Ftb78HL9MW
grbe0y9fUmXQ9YN13iHSQpjqpqh7MiCDtjGitrcHBfA4+oCKgeEiSgymty/d
KoCZR4ECNPoXkRBwkcf/LoBK91dKL6Ivojac6GO/+QII22+gZ+64iKyUFfSs
JwtAsiLIS59YFv29r/1ba7gArl5m5w1AsiipxSxBoqcAfjNuZdTelUUixPaS
7O0FQH1g8/5snSxqV/UZJGoqALr7dD7fNmSRdVio79KrApgqKvVlkJRDO20J
bINPCkA2kyeu210OJR/Pr28sKYDGiO/3hZ/KIVGNJ5YluQWwRX/CSfOXHGqP
aDh4lFoANVPd4hKi8si64wPB91EByCgb22+5yqNdshGVG+EF0KnjpUl4Jo9S
tObnNIOO6ntRxSK1Jo/OR21EiN8pAM5Dl6qX0gqo8wOR4EnXApjsJ5HnClBA
tpQM3cduFcAKyQ8xz2YFtKfD7bpoWQDS1L+lK44rotQYUboBkwLguuIu3a6n
iMQ+Kjxv0DvioWTnzhRF9IFax7hYrQCqaUjnSyYUke2lq5uxigWwIxvoa39O
Ce09sk+/I3XUX7Y+fTovJZTW4yNnJXKU/8onx/K3Skic7sGYxtmjeuX5lRUp
MdRlkBgkxlEAC8IjOl/MMGSXkM/NdqIAAiKkeB+WYuig98k7HHUBBOsK1lzd
wlAGQ+PNn8QFoF1Gy3hNEyEJo67j/f8IIDyfO5aaiVB30khZ/ToBglOHnBh/
IXRrYF67aIkANfxCPD958OiAaXMp5hsBxuflJX7q4lGGCXGczxgBlvUz+sP8
8EgylUH8+gABFMq4BGqK8OjjEHe/ejcBIg9NqY8GWWTPct7nfCsBcj27jvbn
eIQzU2RhbSCA8mRljZywMspK16k7fEGAgdfsksLmykhq5Oq1hccE6LaxmLr+
UBl9YnPY6y0kwFu6AZbGV8rIwfxO3pssAsj5RcuIzykjXNYDfGESAVLEM31L
GFVQ1mjibHQ0Acgi5buplFWQ1ClCmHcoAf5mbxcbuKugHoun/JYBBLA/KfTZ
JlcFOeY0dqp5EUAqTi1DrlsFEU10OYs6E+ChNb9M718VlMP5lZrFlgAltafs
T/OrIhmrH08PzAmwqacnIm6sij7nbRr+uEyAqzOrFnvBqshpinj9szYB4t18
fsdUqSJiHsbUOuUj+/xjtHMjqijHmudigRwBzJ/WzNMcV0MyBee/RkkQYKjW
3ZVWQg31zije9RIkwBrPmxOLlmrI+bQupwUvAbZ2I5iKItUQyU3zZtWTBHjc
GXJbtkYN5RU52IgwECCwjuVyyZQakp27Q8xMQYAflw+7pynVUf/ZsJJ9HAEK
qJ+nT0iro+Gus/Ef/+RD+UqlZrS1OqLUUx7IncmHEG7TZ33R6gj7dJ3VvS8f
rspQR2XXqCNP/QAL/Lt8WEw5YfJpQh2VfE7LZ3ieDzW9hdd1STXQV8OX32YJ
+SClhuZ3RDUQdf/nczUJ+fBAdN6oyUQD4Y2Xb4eH5IPoG+WY8AAN5D1IXm3q
kQ93qIdxF/I1UNkVvo1z1vlwilOkoq5FA40NK8vuGOSDs1fFB6rvGoj2qlVg
Fzri4osJ/KSaSOVrAGSL5YOvQ/U0Ob8m8r2WTuLKnQ/CNTMydWqaqGLspRZG
lw/zIz+VkK0mmrDsjaU7zIPJFsmRqnuaiH5yuXf6dx4UVikfY8rSRGo3KJhf
TOZBW+uDpagaTeQ/zWf+oCcPqvX1lfh7NFGljUquSVMeGHK/qTiY10RTs1Yz
fE/zoPmq9luBQ03EZHeXbzs3D0xEjVpes2ghje/pTp2P8iCR2aO3QVQLBdjX
PMkMyoOcQX9mZTUt9ORH7x9n1zy4duydrcE1LTTj+Eta8XoeZBJ7Hl9010LM
ixQBNJfywFiXfpkuXAtp3eZvmlTMA4cvr1gaM7VQ4LIKUbVIHmTdaNCZf6KF
ql1vaNznyIOfRE8OHrzTQt9+3402os4DxT8N7lGDWojVI6PnzF4uzJyIy1ua
10I6f2oYN5dyIcVJJLjorxa659Vn2j6WCz9Ut9ULKLTRi/VfWenduSC5QVbz
7aQ2+u5DOeXYcOT/UlHAWVAbndziPyNfmQtDJ/8OyMpqo0t+qg5U2blwqWKO
3lxDG4X8vVE5Hp0Lst/u3v5qrI1q/gtceRKQC2dOfbP5ZK2NFnYzLgQ758Im
ge+brqs2OhX4ys/wWi78+i/urud/2shgv6+BVycXLCstWq6Ha6PQe0djn1wu
MPDyT5xP1Ea1h5RqbYK5MHoueYkkVxsthpyLTD2ZC3c5Oi8elmsjTiK1j/YU
uYDteLErvNJGlx9Y08vu5IDLpsGxgXfaKJwkyITiZw6c9+EsnejRRnXhmRmj
Iznw/Gt0iOu4NlomrR2v7MyBXtaC/xIWtRF3ZD9PUF0OmH2rnjXY0UbGFCt2
+uU54Cup/qSaXAc9jKaq4M44iuegNPGSTQfVUwn8Wn2YA5lNRkJmgjrod6ya
RItfDsi1Cramyuug07Q2d5IdcsBceODWbT0ddCU+6I2dWQ5o1Nyg67XSQVH0
WfvSmjmgThO5WOepgxoTa5XJLuYALirQnTdcB60yDoSP8OcAa/DBNHGmDjqb
svKhgiUHtGnyeiye6CAzZmrau6Q50EGgYONv0UExaQJGelvZEHaa/bn1Fx3U
zKqexjmfDe5NlYKUv3TQWobN6O+hbPB67rrMRayL+NnvccH7bOiKvhhJOKmL
rmVn2Sa+ygali/XVUeK66BHH61Lbkmw4rmFl2a+pi97lDixeSM0GIj3nHvcb
umiDa/X88fBsUBnzqjfy00UCBGrvYZ9sCJUbK7SP10WWvIKvy+yyIeUY/Z3E
Ml0UX6j+z98kG25x6rm/bNZFrWdskY5aNph3O5uVfdFF28X3HpySyob5nzeP
q67oIiH+7I7lM9kgtTmFXSXVQ1Zlr6mamLIhi1xo/BWHHkoUGDSIJ86GIfw/
QUFJPfS+YjXZej0LVuID/II19NCOEM2IxLcsYDjManxorodEqgQ5iAeywHXP
3Jv1th6yFtWwHmzJApQvvHjsrh5KeWpbXPIiC1TlHk2fjdJDHWLBC76FWTDe
Kvuffaoe+ledLaKVlAUz2sVqNfl66LxkncfJ0CwY/hrXRFKuh2xfDtYsembB
Xyp5d7OneihN6s/fBpssMGKyKqt5oYc+vKJRenQ5C4SsanpEXumhfRmh+1bK
WfCPLoZ78Igl6jTei0lkQYvA+PjnGj1kJ3eT4hhvFjxJUeRXOvLPqA++1E+f
BRTfzR/ij+J/VMhJLMJlgQadf8ThUX7c27ohn9VMiBXC7+cV6iFJbOikxnQm
XPTLSFLO1kP2zX+us/ZmwifVISfSZD2UhactXGjOBLpVDjbyaD3U805o/s2z
THD97LxsEaKHiFQ1hWLyM8HM+G4ig68ekmq76WYZnwk+3x2pLhz1z1E95IVo
cCYMil6geX9DD+W052wduB2xr2Buh7Ee6tV8I99rlQmPCuN2ZTT1EMmHoXsF
+pnwPZPhJbW8HpLVWWvxwjJB6k1xv5qIHnLupiVTO58JS63uRb2ceihPT1iX
mSsT3vWsNlXS6qH+T5rx8zSZR+unea73QBeRGtgNvN7PAGy2O17pty6S7w1h
jfqVATc+Zyavjesil8u5FtcmMqBf5+atjS5dROh/ky/8KQOe+X1g0a3TRYPG
w9/2GjNg6ZLeHK5EF5EPrZ3rqcoA03dbr88k6iJFUzqX/JwMmP91k6YzUBe5
fRGu9ojNgIReU5p/Drqo8KrWhnJgBrSZiCt/MtJFw1/tZJlcMuDCl/6WS0q6
iNLifuCcRQakfew/G3VOF2HjufBKNwPm6u8HRDLoIq/r9SQPFTKAgkEn0fCf
DiqeHNa6KpwB5K3VTjNzOmjkxnqs4KkM4PfW2pXu0UHUM3R9u5QZQBd2QUXt
tQ7C24owf9xNh98TXZX7+TrI55uWee5iOiR0rdQbROqgUrtbuW6j6RBk+WH/
rIcOGv1+fwZ1pYNUYJCkvZkOonXI42OoTwcjhymPPSUdpLJQ7zRbkQ77NZ2v
+87oIF+nL09eZqaD2YUcip6j/9/jxfU/YVHp4GPz3/eZZW00fptexvS/dAi9
zp6D69VG9L9EAs45pcPDh/GLp19oIzU37aa/V4+4XjRZM1kb+a/cIurSSof2
+fdl3t7aqMojVCNbNh1aHB3vvzDSRpN/8qJdBNJB4cslfiYJbcTo3dCjxJYO
GrIduc9otZHGxhdGOvJ0GCujSy5aOtLbOxum09tpsEnrzkTVqYWebtFnP/+R
Br/sQvxIi7XQtJ/oVOiXNIhjZByqDdZCJ3a0z5h0pEF36NtaRYsjvQ2wd+B7
nQaTtdYLtTJHevsvtHKrNA0YLvE6KTMe6W1g/kpHWhrgxuYTNn5porn9hguZ
EWmQZvHSe+6DJmIJHvFz9k0DDbdzUTylmkgHt9mgYJ8GKxYns16GaqJ79xlw
NKZp8Nn2zZ+iG5roBdF5tUn1NDgrkty9rqiJ5h/oRD6TToNLI8wbBeyaiO24
w8cQvjTYHs78XflXA+lFPKA3Yk6DtYMnK5RfNFAIGcHkzPE0uCVFnvH6lQaq
iWzM2NhIhVWXu3xVKRpogeLr+Pu5VBhS+10z662B2GM2edIHU0Hgmt0TU2MN
pE/NeMuxLRU++SwJHr+ggUIfna+Qq0kFVS0b0V+MGqiWVvcXZXEqrOjE5dKt
q6PFeAeJ8eRUkFokKNweUEdcDGF3njxIhbnQ0U9UR/tFwyTCm3veqfDUl5xq
LUUdhTG93Te4mQoab/Me8Pqqo7qUr8q8xqnAL+PQnmumjpaZt8LXVFIhzZ+0
xVFOHfGkM3a1SqZCjk8abegpdWTEJkabejoV4siWjOb31VBEpq6RPWMqfObv
7oubVkP17I5pF4lSwfDnZwHPVjX0OztslHwtBYYNrDWDS9XQac4CrtGZFJg8
k00oi1JDpnlvbSv7UsB6Vzh9yEUNRXKPlga+SwFOOTWuNQM11EjYWrz0PAVU
8QEP5yTV0Covkxh3QQrwBN/wSmZWQ2eLxLxXE1Igij780Y9tVXT1rN7rdyEp
cJu+vbT9qyqKLnH8l+SRAk6XXfg5GlRRE384srNOgfcmV3WHs1XRWlnBA2nD
FKjnZ+X4cVcV8Qs2dZDiU0AsVUlO3UIVXXs8SjUilgJLrFHSy3KqKFZ426CC
OwWKWv4+G2dVRVDFlBJAlwJzK6HppzZV0Iao+IjuYTIE7VvWVvepIIFnehyc
K8mw7hVs//yJCrIUd7L+PZkMy+F9a4JRKijheXhxc08y0LHufhS1U0EtkoUL
CU3J4M91paQPU0FbL5tEbJ8mA2lJrbPQSRUkJD3mcSEvGc5bbBjprSsjq9rt
GpK4ZPgYxb6r/UkZJV08sTMUlAzajxOLL5Qpo7Y6caUy12SI0+F7ynJfGf2V
u3Tf/3oyZHDtiuxfU0YiDU7vtS8lg1YW+vhLShlZK0ZQnFJKhta0/cklWmWU
8rbw0rJIMnilH5RtL+BRJ9ac+JYjGYS7X/fStuLRbvPYUBx1MvTT6l4QzcWj
88p/T1rvJcGQ6TMt/aN51LblhJXEchK8Tnq25HQZj9JUJQqJxpOATjTV6q4w
HnW1XZof6E6CqbLS7aDjeLSn7ixU0pAEhz13Hk00ISTeEeHmW5kETq3dSlle
CNlpFb3QzE4CEqPMVWl+hDI+NG+xxSRB1FMynfqvGPqoMy6/GJAEvHUkNy48
Opq/u//ea3BOgiLuBKI3eAxJXmJujb2WBB6LIlnOG0rIvkeCzEonCbJ/fEm6
Ua6Esgz0dcXkk0BckUyozlIJ9fQ6x+OEkuD545frqQxKiMjo4UDfySTA/ssJ
Yu9QRFIDRaxFFEmAzgVv3wpSRI4mYOGzkwj8XHMbqVKKKGdoPF/9ZyJ04vqv
tS0roF7TnW8sXxPhW5BxJGmpAiIZYRZY6EwE2pqgNhdrBSRjLunypi4RCO+/
bh/jUEDOo/rV0eWJMElH86J7RB7lWdzesMhIhC+OVX5dafKof/yhrGjk0XM8
wWD3ijwitSoOPPBLhI7nfiYmLPJIfgrgs0MiFP8Jn/z0RQ65WE+QFJglghfD
DWbzLDlEmNnR8tJMBGkhnvSf1+XQoC3LI9WLiUAUMsfhdVoOkc9J9p04lwgr
n4KE5n/IIsVbBszzLInQayL0WP6pLHKbv23+mjQRRhf5jOzvyKJCh8jcyK0E
sIHXPTZKsmh4oXjGfD4Bxlroyc+QyiJK53d8wsMJIBy81PH080WELU047b1P
gD1r0/9wWReRh8vuk0+vEmBbZEib6dZFVPyLZS2vJAEaCjma58QvohG3CzIe
qQlgFnFZzXNfBlGvGgQohyfArjG9w8suGYT3dGlivJMAN1xHBYoyZJDPWiTR
nF0C1Eyd9pZ2kEGl3iUar0wSIPfBxBsLGRk0uvEuOkItAay6TYeISWUQre9k
j5lUAsgEuLGxDUsjle1dRsGzCdBbcrk4uFQa+fqzmu0yJUCEeOsWl580Kt+5
kN1NnACy389VjWhKo7pNQpPcj3h4tnP6dhybNOL5+1VjvD0eMuNGZ07/lEKR
u4yf75XGAw//6KDfGym0uqdrxhsRDxZaHDe8oqSQyWHYVOuteJCT8sP+XZVC
jceaHOzV48F4z+7w4JwUOkuyvULOFw/YwLPj7lsXUCypuH8lSTw8InlPrtJ2
AW2QO+H05+JAd13ksk/iBWRJVRi52hoHIrUzL8msLiCgGaNPLooDFZJEv33B
C0iA/kSm9IM4KKtzLXPblEQJjJd4R2zj4LHIk+CbIIn+noioCFCJgxylFvqV
aElkzdoswXk6Dt52bBXzX5FEbSf/vmk+FgeviavTebglkQiHhIrtzCPQ5jHR
XF+QQClczl0k7x5B1+lV5poXEmiPp8iojPAIGg21I3wDJZDdmfFR7ZBHoPaM
9L6uhgT6yMd8c/nGI2iP/deFp5dA4gL6S3HoEYxnBb+wHhVHGUIPvSW4H4H8
Laut58XiCCcK/wYOYmHjpc/3i+7iyFFs54HvZCxQybe9WJMTR70SktQnm2Ih
frVna4pEHElJ3U5pyI2FHeUtj7/5YihHppjDKigWXoZS/g6REUMkchPFuOux
4EUmmqH/6TxyUWARLVKMhY+xrBdN7c6jQSWDV+ocsVBEfK467p8oksVHKi38
iwG7F4tX15JEEUHl3fvosRgI+c62EywkisjVdy+JNsTAxOXUuwotIshD88Lw
56wYkI3cqRO+JoJGtF2svAJigMX5gYvVmjDC65XMn7gWAw4jKpPr0cKoWH/S
7bVcDGxtxQv+OyOMqC+zbpufjAHJqbOmCW+FkI+xYfDe32ig8Yyv6zMTQuNX
osjyR6KBKBJ7PrkmiNSutsQr10VDSuf4jeE4QVR+7R/rXHo0CBtG3BgWFkT0
16UIEX7RMP/2RP7OBwHkf8NVQNAsGpSjtO3NnATQtE1pdbdMNAxFyaUSUQog
LbspWTeWaNguVj1HUXUOVduzvaPfioIeMD3wNjiHTjhd1n45FAX1P4q2NDb4
UeDt6L4rr6Lg6zlL7H4WP5pzbTX/mxIFdcQxXFwq/EjPY28myycKqHUkCpmX
+FCNl7SzkkkUbBcIClum8iG2O25rUxeiQErsgHQez4dC/MoCQpmi4FIo38PS
X2fRwn/TRHzrkfB62cAuMfssMgw8GdPRHwl8k30x2TpnUd09IybnF5HA3Dzc
1rB7BnHcj8mmToqE2d6is0uVZ1DYg7Yzzzwj4cxAkBav1Rm0HL5feflyJNz7
roW3ZTiDTCJlpDbEI0Fk/XFl9fvTqDHavTGNPhLKiMkGKO+eRmcflavJrT6E
0c+Xf/tInEaR8TMfxz4/BBvGAvKNBV60msh+5d6zh8BJJKv/qIAXXU0xnuCJ
fwhjTuWm6ha8CNJib7W6PYS59gk/bhZeJJD5/tct/Yew0D8tytnPg2KzD+6Q
n38IbXw2BUrxPGgj9+LBY5qH8MG93iToEg+yJHhEXPoVAceJ7PeGqHlQW2EF
7erHCGjbTaAIyuJGIiWzaUlVETC/GhppysmNUspOcUvHRkBmKHElRyEX+lth
UvbldgQ4LoUyPxfgQtZVj8QCdCMgg1/97p9qTtT5tP01h3AE4Ag6D+vlOZH4
80PUTBkBaKUzdPE9B8p4KdtpsxgORpppFdZGHGjvlachSVc4kI85Lh9MnUJ2
dY9HSivCgd3I49tjt1PoY/03a+2ocHhR7RCif8COpN5y/FxyDAc1/gzfkTh2
lNN8xTNOKxyITQ1EJXnYEa4lbkdcIBzI2j3nHF+cRI5tHfcHyMLB1Uxg1V39
JOptx1H6/ggD8wmFRLWvbEj2g1wSW0cYVIevq/90ZUOEbi/2htIw+H4gu2tD
zIbIeyoLr0eEAZ3rg/UXmazIpXdOCGcfBsXUDS1T4qxosJ/zZaF6GIx7Nuov
drIgxSFTBXW+MCg/Zkjeb8OCir/Et/4gCQOcf+aV5H/MiHq0Uzd67gEkJdxC
59KYkcf4sUGRtgcQczzO/oEEMxqZlLf8XPQAjv2RUM36dALhZ7znPB88gOBe
XKWF8wlU/q3K5cTNB+DSn5r+iuwEop//vlGr8gBuKTRNppYwIf8FriDz0w/g
OvHS4IIqExpfNDu+d+wBMC6fycydZURqvxIe5c2EAusp3+WS+4yoauUDs/K7
UFjx0b21zcOITqwR5X0jhMI/m5DHscCAAjcU+CNCQkHHqc3W3poBTW/5PBWw
DoWD/JTlGBwD0tp5ItONQkHvOdtnygJ6VP1vvsmVOxQqn5q5rCvTI7YDbk36
w/sAlC7r8+10KARn/vnF5H2glWD6p0VFh+aIksyuNN2HeFepLZvLtEjvePfU
du79I314m5OYSYNqyEgcs4LuA8crpISfo0YclEqritfvA0tAnNm4BDUKo/b1
n1K8D2denScbCaVCy7TPcKEc92Fco/Vq6RdKZMiwEHl2LwTyLB8X14lTojom
XoaOsRDYmZslDYyjQDws1zKdGkLguhYNhdkfchTJlsxLnR0CpyW04svMydEq
+8eKpwEhkOXFcOJdBxky4TwueflaCIhkhckvKZChRm6sfl0uBJj58Z+sa0nR
2dN+KmknQ4B99sN9g4ukiE3bOtVzLRgybWZZh5qOo4VL/SW1z4MB1zn0k+jS
cVRtpFb7zyMYjBd3ysZmSFCIWW07XjwYGrluKJoEkSBDS4Ev4Sv3YCXurZoJ
Nwniscn60fX0HoioH3tc20GMVm9R/6VzuwfqSgJ6Or7ECJzvkV8RvQc0mRR/
PwkRo0j3Vbas5SBY/hiheTBHhK762ApOVQaBjAi1f0oxERL4b1Du7O0gcCq6
eFrUiQj9DdLQcRIKAsaTijH2kkSoM7Tu2tOfgaCqZJD/5fAYSngodHu9PBAq
grVm6PuOIevYnLuyjoFA13DeNbfkGBJPpI0NOhcIZv1cjCRBxxAuLSSnZf4u
0GlMR3SaHkO9WWtVZKV3YffSUL2L5DFEyLd7q3frLuAERlW86I4hx+LhT4ln
70Kkt+qUxS8ckq3Qmhz+FgCvciuZn3XjEPnT+t+nigKA5vvA8GYFDo28EDm0
tg0A1ZxX/PAQh8pf59GV8gbA52e91KV2OOTRSM+zNP0feM8fBmnhcQj/LlRc
nPAfDMeM3TJixyH69g38nRv/gdnNZoHtuUNsusv+cj3Xf0BUbBVBn3iIVX8e
sTmc8AdFYW/zFNlDzH9Qx0st1x8CzslMK48dYFpfG0OjLP1h4aKU6ob/AcY2
eT6555Q/vAn9TlXIcIAtzBKKmMb8QEz/bbthyT5W94Ox5mqWH0hksjxXktrH
IpfD2nLN/SBUVux7cdMeZvhna3CWzQ9sw/587VPbw3i2HL+fG/GFz2QsF891
/MNWd0c3XdJ9IVFVUOqExj8MDvVIX5j6wiXRxBMMLbtYAkkzyzazL8iGvijJ
VtjFrlJInFMcugPtX7omL7zcwQRoiy7eT7kDp9P+a74quIP9ZWTWaje+A/GF
DBHheX+xTtaHV6mY7sAZvtnLYkx/sQyOHUfDfh84HrOFWh9uY468t/9LTfQB
Kc0nlCV7W5g4/0TUqKEP3MRrnD/vtYXhhA2yuOl9IPNySNyThU2sV+zdY7vP
3mD7q2rMwXoTI0hdaKiI8wYva3359K8bmIdcSffvS97wLpQb52qygclirOMX
aLzhu9B0DWPfOkauGrXs/9ELJibGOSsN1rERzX97b2O8gN5EuMm4dw0r13Ol
Idb1grxT/Ir8xmuY/+UpTi1KL/AZDqiRG/mD4U0vn3/0wRNOWrIuFt34g9Fb
tGL9kZ7AnZc77f5zFZu+IW3AquUJL3gmCrrurGLVdmU3LMk8YUGea+ktySoW
4nTSo6DdAxQMWmpbRFYwQ7eYkPlwD9g87fQk58pvjM17P0FY3QM07q1FYmG/
sAU/9wIPEg/4ofDp+mTdMuax03Lz9kN38DKru/NifQmjJy4L2zzuDsWNuqSr
UktYNXVMSXCYG3gfOLz/ELiI4Vnc2ymI3aBWedTTrfsnNs1t/CP5visYiSXZ
kfH+xEIEL5Jz4Vzhnc1XhddBCxjPhVOC5fdcgJfS7GnGzA8MFA+1Jfdvg0Br
bvxbvR+YtcY358a7t6FMZJzqfPM8tmrQEaOx6wztDOcfLMjOYwnmlVW9/s5g
JS7XPvXmOyZ+M/7TtW0n+PLNdWpP+TvW6+L9e+6OE9Suah9y9s1hHr5mdO4b
jlCzwD7J4jCH4UIUxHe8HGGy5RrFc+I5jBDFffnBHwdI8QpEVaXfMHwysReN
hwMQp42ONBl8w6ZzfiSl/7aH5SmHzuSDWSyktPslr6s9ZJHvL3x6MYvRVz8b
rFy6Bet2h6xsLrNY9ZvkTWnnWzDrHZa0LziLGbb6scCCHXxd8D2kXp7BVj9a
XNRxsIPSpPrKnuczWMIwujr4/SYQLmmqvA+YwcSnz/xnZXcTDPnFCG4aMxj8
JMtamLUF/JZrl9qJGcx6faney8YWDl8LUDZ/m8Zw+5/H9qZswOGNqKRxzTRG
IK3Zi7CyAbMdCVq/8GkMT5/ByTBhDZ7dmTsFptNY78lALNvCGioLIEP/3DQ2
rQFNOjU3gKDeaL7zawrjuRaJu/HcCpoRzeqt6CnM2tVQxfvpdXBupNcmOjOF
EULYwh5WWgJfkYsK8etJDJKn32eXW8DLONP2WvVJDFdWTlZdcg1U89J3I3om
MHy9h3ZboTmQ1pXs7RlOYCGfZGNG8q/Cw3FSutaP4xhM4z4t55iBuYkaT6ny
OIbb6KQ9lmUK9hPkmWnPxjAeskRD5vQrQCJy7VY5yxhmzW6eJJhiAtfOrlwh
8xvFCKK8g0qJxiCZbC3N3vcVm8b/ZDaKM4JW+qnkG3xfMR6T52b2MZdBVwzT
ve4zguEd/ssMiDQEz0QP4uamLxhuM7SWk8oAhpfKm9SOf8FCTjHJaxy/BMot
mUFNWsMYTqXorduhDljEVlSQRQ9hIY4XlNN3tODmxjNHoq5BDBff2ta8rgED
Jsb7SRSDGP6VsdbCLzXwNpe/kq09gMHYt276BRW4mMvzbSu6H8MT+RjIzeKB
FiomfXv6sJDL5KWtdUrga991MHniiPMEnpx4Igdtv+maZq16MdySVs2tAmlY
/xlkp3HtM4aTdWqoTZUAA+XlzWu4HgxHyRROd0IYXLaJYtarP2K4YuPk53un
YYaFo2nIpRvDBQqolnUxA9UVvZQcqS4MV1d674n7VrPQ2GziG/IPGE7xMVkB
33H8nwKnNN+fHRhu0dgh9h07fl71hMXf4XYMZ+HEd9afD+993N5Vue89hnsn
wBoaL4rX5/ILkR5pw0KYfEg8BiTxxmvGjTFLrRiuw3ifa0oG39c2+I6V6ogD
Lmx9WpTHU/iEiznKtGA4UaaVwC0M7/aeEErs+g7DeeysM99XxkckvMc7PgUs
RNvJ41eEKt6PfartxEYzhj/zdbktVh1v0Nh6oSqvCYM9LaecJE18kd/DMjuL
txh+uO67d4Y2/rr+5Pfjgo0YPBOw1c3Txe9HRKZfIW3A8FEZk6eLL+HVZyO6
2NfeYGBLbrFbYYBn9r5Hy7tUh+G5GpcWvhjiGbMd5BVWX2M4qo2KwdHL+P9c
qn+q415jsC3sCBNG+KTr042C7LVYyNxN/qppY/y52Qn7CcVXGL4vey79mwle
vSA21sGhBuNpGih8MH8Fz9+z7D+d8RKbfkxl4/7TFH+jOaTYu/cFRkhX5bZY
NsPXX/1IZUPzArMOuzuhsXIVv5Pmr3+g/xzj8XyZLblmjm9SEYl/nVKN4ayW
zLk2r+HZE4VZeRqfYaBzho3yrwXeyWq5U+3KUyzkosXw5q4l3qjozUOljSoM
fzY5ZWb/Or5SlbQqOKMSwzF0G33C3cDLGZrcZlV5jE3fux85fswa/7/nn/4v
/z8sRCWE
          "]]}}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw12nc8Vf8fwPGbUCFZRUsUklJGof1OUYlCZSQaUrRQZihKkczMUNl77+1z
rz1bUqKsjAplhkq/fvd9vt9/vo9nL/fec87n3HvO+Zwjet5c24SFRqMNzqfR
/v/////n7FBBTmUfbzsoGizD/AfzCpKdxH1RLjudaefzFcT+JfcO17gq7DoV
ZFeuPU++/UfshysIb9/PGbO/49h3V5DRF1tV3Tg5ZZldpoIoPPl2Xm7HWqZp
YhXkZs2f4jZHJeyCFSRHopCVw0QTO2cFkbjxWP9otwn2OQZ5t3DNvLwVTtjH
GERMcfYu7Yg/9j4GMY/8sP/y7UTsbQwiyCkmVF9HsDcyyKUdk0sKFrViJwxy
1krv5Z23Q9izGUTj9ZmOuUYWOWaPZ5Av158Vt5gLMe0cyiA/+TQFbRK2YPdm
EOEV0UfNLQ5gd2GQ1tjVo5uPnsJuzSCH++/LQacFdlMGUX9gvf324/vYTzPI
s4MTj+qcwrAfYxDbkt8apdaZ2PczSFuyzfyRFdXYFRhkynuYl6+vHbvUv+UN
qbk67TGKfTWD5FwJqtw+xybP7LwMkqCnV2vusJJpZ1YGsTjZ0qSzWhb7NJ0E
lU6pyuxVwf6NTqTuL423VDuFvZNOdMp15vkoWGB/TSf+GxxdXUbuYa+mk1QT
h6ZzV0OwF9KJQllokUNLKvZUOqHvfBynK8nAHkEnJxpaQx4ubMUeQCeezz00
jsV9xe5GJ/vKklfa8NC2MrvDvx5krN6jwc+083U6Ob9MaZ3BmvXYz9NJzRBb
vGLYTuwn6eS7XCuvzDVN7IfppKPK//t2R2Psu+iEPzR8YmKRLXaZf+/HPZO7
dP0j7OvoRNvyc+frvufYBemkbQ1r6ERKFnYOOjnwIoKu3liFfY6Q8G+8r4+d
bsM+Skha6pNsHrNh7H2ExBwQE4v9S9vG7O8JMSg0KJYI4mea1khIuggZmrgt
gb2ckBXTJw0l6duxZxOiH9TAOWOsgT2OkM2/2bpP5J/FHkpIp3ORktLEDexe
hDz0PlkhffU+dhdCftpybwxdG4LdihATo+VX01ckYzclxPhHgYuBbhl2A0Ly
2ugcYcMvsR8j5JG/eIFCSw92ZUJmE9gd9bsmsCsQosDeXuvPt0CB2TcQYkPv
Wyd2ZTnTtNWEdBmwvBz+shE7z7/t0XBxoYX3HuyshJS9Fp7fmayJ/l5OloXd
Y9+19jy6tZx0PojsOJ94E11aTlhjr/VJwn10TDlZJP7w5bq+IPSjcnLGR0Q9
MSgBfaOcXCxQLXyhXYTWLyeynTOT5oKNaCgnEjYdByV7PqLXl5NjGZ+uns34
juYuJ2Xfz5rGl9MUmZ4sI4aRLeZ/Y3nRHWXEy9lZPuXhWnRFGSn88/Anv5k8
OqmM8HjenPZXPoD2KyO7g2rP3xc4ibYrI1ate/yVP5qgz5SRG0X33DeF2aBV
y4hJS/+1DHU3tHQZuSMVJqbxIxgtUEYSTSwyQlwT0L9KyYeW3KsqCwvRPaWE
+/itEYlbdei6UrJU0/uWQlsbOqOU7Pj66GeQ2Fd0cCnxZ09SDTGYRd8uJfWy
8qOFThxKTJuUkoWOnKtSPVag1UvJ5FhC3sm7Umj5UhI+INZZf2EHekUpKbx2
y15HTg09r5R4RDv/vvlNHz1YQr5IBjo0+5qhX5QQBe3V07vX2aPzSoj8vb5F
ldHu6KclRHvyww83/hC0awkxGPYSf30zHn2lhCRcUXVeUJ2H1i4hNgs388Rw
VqO3l5CVkcKl21TfokVKyIa++S90bD+jF5QQC3UL64SIcfRIMWk7KmDWVMGy
nem3xUTAeHf5hR5edEkxMfhjycY2J4KOLiaRz0sKFIVk0B7/7JKp/fXCHrRl
MZFPjcrYF66O1ismNT1xWVxtp9B7//Ui2Tupq83QEsXk6c8ROY2rtujFxcQi
9NXk++r76Ikissc1RZK2JQDdXkT2XjaNkI+LQjOKiL44R2esdCY6sYgsUJW+
FuJZjvYtIktaOZzo3Y1o2yICs83z6w0+oI2KiMqcYaDarwG0ShF5+nxzux2Z
RG8qIqETLBNbkufvYJq/iMwxdhvPFPGiZwvJAptn2Zs+rUF3F5JP1fzqfF6b
0LWF5JxzreJu5+3o9EKSPrg0ZCRHFR1USDYPztWLSJ5AOxWShK2gGtJ6Dn2h
kDweqcnotzdHHykktOxqbct0B7RcIbnJklBWq+qOXl5IvPg7kweUAtG0QrL3
tQOj83YUeqCAGLDqKX3jzUA3F5AVIkukf7YWo3MLSKc5v/sjjlp0eAG5MPd7
JiirBX2vgGSZHW6orOhGXy4g/ueHC3ovjqC1CsjH+9UsJt9n0EoFRGl0Y2Mi
N/tOptcUkAXL3/WTbD40ewHpspeLUHu2Bj2cT8SbHHUuxUqhW/JJKKdhupKx
Aro4n3CPKDTFEmV0VD45kLPDY0TrGPphPqmfnyV6hv8U2iKfJNxtmK6IMUHr
5pPSL4nz+L5Yovfkk/kKHsY3vZzQ4vnEK7nsU/JRdzRXPpHcbxpVPOKPHs8j
HCxf5+UciUB/yCNam7ov2fsmoel5RDyIK1skKBedkEcWHXUIZnOio33yyK3r
DwJUoBFtk0fuVeqyTJa3og3zSPOO/I6S/T3oA3lkMS83u9TuYfTGPFL2/NCk
ysmfaL48cm7NFWEzX5ZdTM/kkkULi+dfvLkY3ZVL3rzcMHFRTRBdk0vmpXBr
LTNci07LJdyucPLbp03owFyi4rvJ5WaEAtoxl/D/kLPmSduHNs4lSg/qvn58
dAStlkuisspKRU1OomVziYByXscRv7NooVzCObwj4UeAGfpvDnk3vX7T94yb
6P4ckq7+6bHw9tvophyiI+mTPrzGDZ2TQ84eqez+E+2HDsshO0YFl195G4q+
m0PauWoGFunHoM1yyLerZ7nOVaahNXPIPAmBHSyy+WjFf53tiPrLa3S0cA5Z
4HGVV1e4Hs2WQ0r16v04771BD2WTqHk3fvfyfES/ySaO9zOCUwP70EXZ5ERP
Ork69R0dmU0etPW37Q35iXbPJtbSsqyxhvN2M22eTW5aPd/j77gIrZNNDE1Z
1j2P5UPvziYKah86z21diRbLJhU8JU7ydevQnNmk6P1Sxt/MTeixLGLRrOK5
unwrui2LFMvfLOT+shtNsgj7B35z5Tsq6PgsMqk7GC/54ijaO4vY2mo6rJ2v
g7bOIq5HRrRvnj6DPp1FXrP35CmoXkTvzyK9fxae5vM0R0tlEblVbt/lVG3Q
vFlkUX+a7vXTd9DTmWT8RKvU+vkP0J2ZJP33Cb0jL7zR1ZlkfWxlrdOdQHRq
Jjm4O0U29ctTdEAm+Xj89+PW8hi0Qybxe/v71aPsFPT5TKKk195Ar89GH84k
Qg9ODxgqFqNlMonp5tKWswkMtGAmKbt4WvGeSx16LoN8OmI9Pn7uFbovg3Qk
r1MLff4O3ZhBVr1zHTKc14XOziBnH3Wtan7ehw7NIL+yO6bVRYfRLhkk9mfB
NUnfcbRpBjng13lzofws+ti/zyvlHx93mreHaYUM4n7/45mvhxegV2eQv6XZ
R8y/cqNZM8jT0Oqr76wF0K3pROGq00wUbSU6Jp3obNEdEa8URd9IJwcbfKsv
HVuPhnRS9WyXeebtzWjudPL387CRZ688uiONWB/OPSHwaTs6KY2QF7eONlQB
2i6NBOTvesOaoYJWTSNKwr+XcEwdQQukkeIRFvGeaS10Typ5JPuj7MgiXXRG
Knkx667LZmmIvp1KDE+s/nuCcR6tnkrc6hZK/np7Cb0ilQjwVh14K3cdPZhC
xvT189j5b6LzUojUbhmvSHY7tGsKqUj5c+vNptto7RRy/azi/r7Pd9EiKYRx
1VggPdgNPZJM0mvtCwrOeKFLkolx1fCnpJ2P0R7JZF9HuU+vXxBaL5mEjZ/p
cmwPQ0skk89Nb0aMxCLRE0lk7VjFjNSiWDQjiaSKHIs8XJqI9k0ishku2qcv
paONkkg8u+n81Suy0ZuSiO5xFd2PG/PRs4lEa2m4Sh17Cbo2kaw1OCLr00/Q
QYnk4ONJlj/alegLicTivGXXsFEtWi6RyG7bZRK0rglNSySGwuvzsoxeoZsT
yIZVa9aIx7WgwxPIo0fdG//Yv0dfTiA1j0/mrBjpQCslEBGxYsd9XN1o9gTi
KS22uXzhZ3RLPMmhf9jZZj+AjoonAxlry1de/4a2iCflCw++Pj75Hb0nnlhY
ir057DuG5oonOiw+4stdJtEf4kgPH2Nnb+s0OiGOBNiNNS0O/422iSOtCU/W
1V6j7WX6QBypKDKtu/mSBc0XR74fXrhoviMbuiuW7LDYX/TcZiE6LZa8CKla
FVLNiXaMJfKSynqaN5ag1WJJ0/mV74UIL1ooloR9Fsk98osf3R9DWH0kCjuu
LUPnxJDP0jmX61csR9+NIeIqVqu/sK5Ca8aQ91l3Dr/dvAYtHEOe5D30vaEh
ih6KJj8vqdZ6iq9DF0WTB5s1rruJiKPdo4m5p5jX1J71aJ1ocjrt47lNLhvQ
YtGEY5d2m+zARvRYFGFtu3ap3GIzmkSROzbNMmHeMmjvKJJaq3mvaVIWfTqK
mPhuSD94TR4tFUUy4JHX+omt6OlI4jzkpa3zUAFdHUlo8UeK3DYqoQMiSZ3s
6pHtbdvR5yPJFSdBmTzfnWiZSNLs8lmXT3M3ei6CDLL7S8ov3YtujCCLhNzp
A9cBHRpB3vOf2VF0fB/aNIIEL/DmrlJURitEkAC4lJGyfD+aNYJ0rH0rvWia
csxzMmVrUm726gAanhMr1bRIvRgVdMczcm1Wb+MZc1W03TPyKO44D4fsQbTA
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
AMRXFdM=
          "]]}}}, {}}}, {
    PlotRange -> {{-3500, 0}, {0, 0.00085}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-3302.6433735464884`, 128.05817055980788`}, {
       0, 0.0008761678464783701}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Epilog -> InsetBox[
       BoxData[
        FormBox[
         FrameBox[
          TagBox[
           GridBox[{{
              RowBox[{"\"Average Money Made ($) =\"", "-", "1668.79`"}]}}, 
            GridBoxAlignment -> {"Columns" -> {Left}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Background -> GrayLevel[1], StripOnInput -> False], 
         TraditionalForm]], {0, 0.0008}, {Right, Top}], 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"Net Money Made/ $\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> NCache[{{
         Rational[-166879, 100]}, {
         Rational[-166879, 100]}}, {{-1668.79}, {-1668.79}}], GridLinesStyle -> 
     Dashing[{Small, Small}], ImageSize -> Large, 
     LabelStyle -> {FontSize -> 14, 
       Directive[Bold, 
        GrayLevel[0]]}, Method -> {}, 
     PlotRange -> {{-3302.6433735464884`, 128.05817055980788`}, {
       0, 0.0008761678464783701}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"Probabiliy Density Function \\n For 1000,000 Trials\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontSize -> 14, 
             Directive[Bold, 
              GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.005`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"Expected Probability Density Function \\n Using Binomial \
Distribution\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontSize -> 14, 
             Directive[Bold, 
              GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.638373938585246*^9, 3.6383740139383745`*^9, 3.638374098263028*^9, {
   3.638485099086797*^9, 3.6384851279022026`*^9}, {3.6384852001953945`*^9, 
   3.6384852207549534`*^9}, 3.6384858529796457`*^9, {3.638487661028973*^9, 
   3.638487684363496*^9}, 3.6384877164231863`*^9, 3.638487776276569*^9, 
   3.6384878711457467`*^9, 3.6384879161416106`*^9, {3.6384880386703744`*^9, 
   3.638488074944061*^9}, {3.638488113744537*^9, 3.638488153660801*^9}, 
   3.6385246051090727`*^9, 3.6385246572539988`*^9, {3.63852626226754*^9, 
   3.638526280005101*^9}, 3.638526352143182*^9, 3.638579849520218*^9, 
   3.638583600861615*^9, 3.6386984706340637`*^9, 3.6388963620367813`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "UNFAIR", " ", "DYE", " ", "WITH", " ", "PROBABILITY", " ", "OF", " ", 
     "WINNING"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"4", "/", "6"}], " ", "Probability", " ", "of", " ", "Losing"}],
      " ", "=", " ", 
     RowBox[{"2", "/", "6"}]}]}], "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"numberOfTrials", " ", "=", " ", "0"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"probability", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scorePerThrow", " ", "=", " ", "50"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "this", " ", "defines", " ", "the", " ", "number", " ", "of", " ", 
     "levels", " ", "we", " ", "have"}], "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", " ", "=", " ", 
     RowBox[{"List", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterator", " ", "=", " ", "0"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"innerIter", " ", "=", " ", "0"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"origBaseScore", " ", "=", " ", "40000"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lowerScore", " ", "=", " ", "20000"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"upperScore", " ", "=", " ", "80000"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"targetScore", " ", "=", " ", "42000"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"origLowerScore", " ", "=", " ", "lowerScore"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"origUpperScore", " ", "=", " ", "upperScore"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"countInner", " ", "=", " ", "100"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"countOuter", " ", "=", " ", "10000"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runningScore", " ", "=", " ", "origBaseScore"}], ";"}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"While", " ", "[", 
     RowBox[{
      RowBox[{"iterator", " ", "<", " ", "countOuter"}], " ", ",", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", " ", "[", " ", 
        RowBox[{
         RowBox[{"innerIter", " ", "<", " ", "countInner"}], " ", ",", 
         "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
          RowBox[{"myRandom", " ", "=", " ", 
           RowBox[{"RandomInteger", "[", "5", "]"}]}], ";", 
          "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"If", " ", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"myRandom", " ", "\[Equal]", " ", "0"}], "  ", "\[Or]", 
             RowBox[{"myRandom", " ", "\[Equal]", " ", "1"}], " ", "\[Or]", 
             " ", 
             RowBox[{"myRandom", " ", "\[Equal]", " ", "2"}], " ", "\[Or]", 
             " ", 
             RowBox[{"myRandom", " ", "\[Equal]", " ", "3"}]}], "  ", ",", 
            RowBox[{"(*", " ", 
             RowBox[{
             "equal", " ", "probability", " ", "of", " ", "increasing", " ", 
              "or", " ", "decreasing", " ", "score"}], " ", "*)"}], " ", 
            "\[IndentingNewLine]", "\t\t\t\t", 
            RowBox[{"runningScore", " ", "=", " ", 
             RowBox[{"runningScore", " ", "+", " ", "scorePerThrow"}]}], ",", 
            "\[IndentingNewLine]", "\t\t\t\t", 
            RowBox[{"runningScore", "  ", "=", " ", 
             RowBox[{"runningScore", " ", "-", " ", "scorePerThrow"}]}]}], 
           "\[IndentingNewLine]", "\t\t\t   ", "]"}], ";", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "runningScore", " ", "\[GreaterEqual]", "  ", "origUpperScore"}],
              " ", "\[Or]", "  ", 
             RowBox[{
             "runningScore", " ", "\[LessEqual]", "  ", "origLowerScore"}]}], 
            ",", "\[IndentingNewLine]", "\t", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"runningScore", " ", "=", " ", "0"}], ";"}], "*)"}], 
            "\[IndentingNewLine]", "\t", 
            RowBox[{"Break", "[", "]"}]}], "\[IndentingNewLine]", "\t", "]"}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
          RowBox[{"innerIter", "++"}], ";"}]}], "\t", "\[IndentingNewLine]", 
        "\t", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", " ", "[", " ", 
        RowBox[{
         RowBox[{"runningScore", " ", "\[NotEqual]", " ", "0"}], ",", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"results", ",", " ", 
            RowBox[{"(", 
             RowBox[{"runningScore", "-", "origBaseScore"}], ")"}]}], "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"runningScore", " ", "=", " ", "origBaseScore"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"innerIter", " ", "=", " ", "0"}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"iterator", "++"}], ";"}]}], " ", "\[IndentingNewLine]", "\t", 
     "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"results", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"number", " ", "=", " ", "10000"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"endLocation", " ", "=", " ", 
     RowBox[{"-", "3000"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"expectedData", " ", "=", " ", 
     RowBox[{"List", "[", "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"probabilityEquation", " ", "=", " ", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"number", "!"}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"number", "+", "endLocation"}], ")"}], "2"], ")"}], 
          "!"}], "*", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"number", "-", "endLocation"}], ")"}], "2"], ")"}], 
          "!"}]}]], "*", " ", 
       SuperscriptBox[
        RowBox[{"(", " ", 
         FractionBox["4", "6"], ")"}], 
        FractionBox[
         RowBox[{"number", "+", "endLocation"}], "2"]], "*", 
       SuperscriptBox[
        RowBox[{"(", " ", 
         FractionBox["2", "6"], ")"}], 
        FractionBox[
         RowBox[{"number", "-", "endLocation"}], "2"]]}], "//", "N"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterator", " ", "=", " ", "0"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{"1000", ",", "p"}], "]"}], ",", "k"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"{", "0.5", "}"}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "800"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"expectedData", " ", "=", " ", 
     RowBox[{"List", "[", "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterator", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"endLocation", " ", "=", " ", 
     RowBox[{"-", "1000"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"number", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"While", " ", "[", 
    RowBox[{
     RowBox[{"endLocation", " ", "<", " ", "5000"}], ",", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{"endLocation", " ", "=", " ", 
       RowBox[{"endLocation", " ", "+", 
        RowBox[{"scorePerThrow", "/", "10"}]}]}], ";", "\[IndentingNewLine]", 
      "\t\t\t", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"probabilityValue", " ", "=", " ", 
       RowBox[{
        FractionBox[
         RowBox[{"number", "!"}], 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"(", 
             RowBox[{"number", "+", "endLocation"}], ")"}], "2"], "!"}], "*", 
          RowBox[{
           FractionBox[
            RowBox[{"(", 
             RowBox[{"number", "-", "endLocation"}], ")"}], "2"], "!"}]}]], 
        "*", " ", 
        SuperscriptBox[
         RowBox[{"(", " ", 
          FractionBox["4", "6"], ")"}], 
         FractionBox[
          RowBox[{"number", "+", "endLocation"}], "2"]], "*", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", " ", 
           FractionBox["2", "6"], ")"}], 
          FractionBox[
           RowBox[{"number", "-", "endLocation"}], "2"]], "/", "10"}]}]}], 
      ";", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"expectedData", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"endLocation", "*", "5"}], ")"}], "-", "15000"}], ",", 
          "probabilityValue"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\t\t", 
      RowBox[{"iterator", "++"}], ";"}]}], "\[IndentingNewLine]", "\t", "]"}],
    "\[IndentingNewLine]", 
   RowBox[{"expectedData", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", " ", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"expectedData", ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
       RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", " ", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "14"}], ",", " ", 
          RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", "Black"}], "]"}]}], "}"}]}], ",", " ", 
       RowBox[{"PlotLegends", "\[Rule]", " ", 
        RowBox[{
        "{", "\"\<Expected Probability Density Function \\n Using Binomial \
Distribution\>\"", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataHistogram", " ", "=", " ", 
     RowBox[{"SmoothHistogram", "[", 
      RowBox[{"results", ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<Probabiliy Density Function \\n For 1000,000 Trials\>\"", 
         "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"GridLines", "\[Rule]", " ", 
        RowBox[{"{", " ", 
         RowBox[{"{", 
          RowBox[{"Mean", "[", "results", "]"}], "}"}], "}"}]}], ",", " ", 
       RowBox[{"GridLinesStyle", "\[Rule]", " ", "Dashed"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Net Money Made / $\>\"", ",", "\"\<Probability\>\""}], 
         RowBox[{"(*", 
          RowBox[{
          ",", "\"\<Conditions= \nStarting Money = $40000;  \nMoney gained \
per each correct throw = $50;\nUNFAIR dye i.e. P(WIN) = 4/6, P(LOSS) = 2/6\n\
\>\"", ",", "\"\<\>\""}], "*)"}], "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "14"}], ",", " ", 
          RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", "Black"}], "]"}]}], "}"}]}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
          RowBox[{"PointSize", "[", "0.005`", "]"}]}], "}"}]}], ",", " ", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"Inset", "[", 
         RowBox[{
          RowBox[{"Framed", "[", 
           RowBox[{
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<Average Money Made($) = \>\"", "+", " ", 
                  RowBox[{"Mean", "[", "results", "]"}]}], " ", "//", "N"}], 
                "}"}], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"{", "Left", "}"}], "}"}]}]}], "]"}], ",", 
            RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"3500", ",", "0.0008"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}]}], " ", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"p2", ";"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dataHistogram", ",", "p2"}], "}"}], " ", ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "3500"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.00085"}], "}"}]}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.638145977872697*^9, 3.6381459808307886`*^9}, 
   3.638146107502528*^9, {3.6381473080791955`*^9, 3.6381473110142736`*^9}, {
   3.6381475891703606`*^9, 3.6381476231484346`*^9}, {3.6381477018632207`*^9, 
   3.6381477052676373`*^9}, {3.6383739705369864`*^9, 
   3.6383739831308603`*^9}, {3.6384851315097823`*^9, 3.638485168092688*^9}, {
   3.63848520243299*^9, 3.638485225538371*^9}, {3.6384852741007586`*^9, 
   3.6384852939418087`*^9}, {3.6384854984065933`*^9, 3.638485559340728*^9}, 
   3.6384855942464437`*^9, {3.638485665135641*^9, 3.6384857817071958`*^9}, 
   3.638485865240326*^9, {3.638485965847584*^9, 3.638485977100556*^9}, {
   3.638486154635265*^9, 3.6384862563032756`*^9}, {3.638486311455327*^9, 
   3.638486323239644*^9}, {3.638486522701891*^9, 3.638486540877759*^9}, {
   3.6384865749509163`*^9, 3.638486840884199*^9}, {3.6384868734302444`*^9, 
   3.6384869454712863`*^9}, {3.638487003889628*^9, 3.638487275211787*^9}, {
   3.6384873162468123`*^9, 3.6384873454104896`*^9}, {3.638487395238762*^9, 
   3.638487395796156*^9}, {3.638487455896714*^9, 3.638487586557246*^9}, {
   3.63848763334638*^9, 3.638487633562537*^9}, 3.6384877171617284`*^9, {
   3.638487799920311*^9, 3.6384878347679873`*^9}, {3.638488040264517*^9, 
   3.6384880614425187`*^9}, {3.6384881609849977`*^9, 3.6384881635378094`*^9}, 
   3.638524591480424*^9, 3.6385246558119946`*^9, {3.6385262995909834`*^9, 
   3.6385263197382374`*^9}, {3.638579848876764*^9, 3.6385798655746145`*^9}, {
   3.638583608291888*^9, 3.6385836107116203`*^9}, {3.6386984735261106`*^9, 
   3.638698478179406*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          PointSize[0.005]], 
         LineBox[CompressedData["
1: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
tnLs4rcVCe/oMvj//WX/G/8fA9JhSQ==
          "]]}}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxd2ndYjf//wPEjFSppUUYpKomoUNlvpaxQoSGFiLIqWhSKKNHSVKG99969
zmlvI5GipYEKqVTIz/e8btf1+xz/uB7Xs1edc89z3/eRMLHQMWWj0Whp7DTa
//7/3z9wfgm0//fPyeG/Jjb/Nc3ivwYzlnkTlvljLPO6LPMHWeb3sMyrscxv
ZZlXYpmXZ5mXZZmXZJkXZZkXZpnnZ5nnZplnZ5mffvHf+Yn/mjbyX8Pn/9qp
l2W+g2W+lWX+Bct8Pct8Jcs8sMzns8xnsswns8zHssyHscwHs8z7scx7ssy7
ssw7s8w7sMzbsMxfYpk3Y5k3YZk/xjJ/hGX+IMv8HpZ5NZb5LSzzSizz8izz
sizzy1nmRVnmhVnm+VnmuVjm2Vnmp5//d37iv4Zv/7XT5/+a9LLMd7DMv2GZ
f8EyX88yX8kyX8oyn88yn8kyn8wyH8MyH8YyH8wy78cy78Ey78oy78wy78Ay
b80yf4ll3oxl3oRl3pBl/gjL/EGW+T0s86os81tY5pVY5uVZ5leyzC9nmRdl
mRdmmedjmedimWdnmZ9+9t/5H/+107f/mnz+r2m9LPPvWebfsMy/YJmvZ5mv
YJkvZZnPZ5nPZJlPYpmPYZkPY5kPZpn3ZZn3YJl3ZZl3Zpm/xjJvzTJ/iWXe
jGX+JMu8Icv8EZb5gyzzu1nmVVnmt7DMK7HMr2WZX/kMepQKI2+W8eP88mdg
E6x9a7PmVvwB0WegtHmxYfRCM5xf8AxOl9lbXqr0xXm+ZzDXOlTcfS3+WsL1
DApfR2wYuvgJ59mfQZH+zqfyd+fPYP78zybIs+7Zv99xB9O0L02gISOrGql7
AXt3E0xfKO3jGAjA3tIE8R7tJeL2DOw1TfCthfft1ewh7MVNYGS9ZEfMK2Hm
RyyntCZQUW15/k1ADT9yRTVBi2ThQM2VS9gDm0B/jpOn7/Yg7PebYIOFOZef
ahn2G03AKb9bZdplGPvlJghZsvRIhZjITGY3bYJhvpgN7TPVmKYZNEHCmR8V
3/svYtdsAtr8vtuXbAKxkybQi5mdOnmUgX1dE/xyjPJeGDuIfUUTfNi3fnbp
gQXszL6oCTwfX19KO7SDaRpvE8A3f559r89hn9EEjfx7mxOK/bCPNcKEvWTm
2clS7AONcGfFDP6H/gPY2xvhYoT0u963AhzM3tQI3e2/TD1btzBNK2sE1Z/v
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
7lZGzDR52kVfOMn/H2h/Od0=
          "]]}}}, {}}}, {
    PlotRange -> {{0, 3500}, {0, 0.00085}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-119.96689333314225`, 3399.7387002664777`}, {
       0, 0.0008554703281265895}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Epilog -> InsetBox[
       BoxData[
        FormBox[
         FrameBox[
          TagBox[
           GridBox[{{
              RowBox[{"\"Average Money Made($) = \"", "+", "1664.61`"}]}}, 
            GridBoxAlignment -> {"Columns" -> {Left}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Background -> GrayLevel[1], StripOnInput -> False], 
         TraditionalForm]], {3500, 0.0008}, {Right, Top}], 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"Net Money Made / $\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> NCache[{{
         Rational[166461, 100]}, {
         Rational[166461, 100]}}, {{1664.61}, {1664.61}}], GridLinesStyle -> 
     Dashing[{Small, Small}], ImageSize -> Large, 
     LabelStyle -> {FontSize -> 14, 
       Directive[Bold, 
        GrayLevel[0]]}, Method -> {}, 
     PlotRange -> {{-119.96689333314225`, 3399.7387002664777`}, {
       0, 0.0008554703281265895}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"Probabiliy Density Function \\n For 1000,000 Trials\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontSize -> 14, 
             Directive[Bold, 
              GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.005`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"Expected Probability Density Function \\n Using Binomial \
Distribution\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontSize -> 14, 
             Directive[Bold, 
              GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.638487463426032*^9, 3.638487595906845*^9}, 
   3.63848764003109*^9, 3.638487723425144*^9, {3.638487808318271*^9, 
   3.638487840860301*^9}, {3.638488049670164*^9, 3.6384880674587603`*^9}, 
   3.6384881718406754`*^9, 3.6385245982051845`*^9, 3.638524662970045*^9, {
   3.638526314935835*^9, 3.638526334035359*^9}, 3.6385798782635717`*^9, 
   3.638583620118251*^9, 3.6386984883446054`*^9, 3.6388963703556643`*^9}]
}, Open  ]]
},
WindowSize->{1350, 669},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 21440, 532, 1848, "Input"],
Cell[22023, 556, 58182, 1032, 393, "Output"]
}, Open  ]],
Cell[80220, 1591, 124, 2, 31, "Input"],
Cell[80347, 1595, 400, 8, 31, "Input"],
Cell[CellGroupData[{
Cell[80772, 1607, 19403, 495, 1722, "Input"],
Cell[100178, 2104, 52230, 935, 372, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152445, 3044, 17408, 430, 1622, "Input"],
Cell[169856, 3476, 53663, 958, 369, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
